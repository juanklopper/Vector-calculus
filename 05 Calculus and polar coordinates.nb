(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    354035,       6947]
NotebookOptionsPosition[    343935,       6759]
NotebookOutlinePosition[    344427,       6777]
CellTagsIndexPosition[    344384,       6774]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"\[Theta]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", "\[Omega]"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "0.01"}], ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8214432887626247`*^9, 3.8214434037338877`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"739b7f31-5cda-45b4-8b1d-7f3291c43b53"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Omega]$$ = 6.283185307179586, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Omega]$$], -6.2731853071795864`, 2 Pi}}, 
    Typeset`size$$ = {450., {117., 123.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Omega]$$ = -6.2731853071795864`}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      PolarPlot[$CellContext`\[Theta] 
        Cos[$CellContext`\[Theta]], {$CellContext`\[Theta], (-2) 
         Pi, $CellContext`\[Omega]$$}, PlotRange -> {{-7, 7}, {-4, 3}}], 
      "Specifications" :> {{$CellContext`\[Omega]$$, -6.2731853071795864`, 2 
         Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {170., 177.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8214433164931726`*^9, 3.82144333747941*^9}, {
  3.821443376590335*^9, 3.821443404536517*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"9b191053-f52f-4082-9908-ec2bb463b2af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculus and polar coordinates", "Title",
 CellChangeTimes->{{3.8214455341340857`*^9, 
  3.821445541417822*^9}},ExpressionUUID->"64cc87bf-d154-4d2f-b34a-\
2c68c3b90f90"],

Cell[CellGroupData[{

Cell["1. Derivatives of polar coordinate functions", "Section",
 CellChangeTimes->{{3.821445547080434*^9, 3.8214455608424664`*^9}, {
  3.821530137572405*^9, 
  3.8215301399481363`*^9}},ExpressionUUID->"3f909034-86e1-4186-9780-\
c0f3cf5fa004"],

Cell[CellGroupData[{

Cell["Problem 1.2", "Subsection",
 CellChangeTimes->{{3.821445562948728*^9, 
  3.821445566951242*^9}},ExpressionUUID->"2cfdce39-b960-483b-aa85-\
a82946877f65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8214455723487873`*^9, 3.8214455751196117`*^9}, {
  3.821449378833197*^9, 3.8214493975554934`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8948e8a3-6e35-4d27-abc6-320b1e3667d1"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
FFEDblblnAm88D+VBwzH
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$8665#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821449398255206*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"1fc5a509-71a2-4fec-bea5-1d2dd113e5ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 1.3", "Subsection",
 CellChangeTimes->{{3.821525449236392*^9, 
  3.821525453549543*^9}},ExpressionUUID->"864c2a1e-d1af-4d86-a688-\
f27f5a3b680b"],

Cell[TextData[{
 "Plot numerator and denominator on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "\[Pi]"}], "]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "edc64cea-d04f-4f21-8c29-5903459b0de9"],
 "."
}], "Text",
 CellChangeTimes->{{3.8215266593609533`*^9, 
  3.821526686722945*^9}},ExpressionUUID->"9af9e0a4-e827-408d-89b8-\
18617c7ce41e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Numerator\>\"", ",", "\"\<Denominator\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "None"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Pi", "/", "4"}], ",", 
           RowBox[{"Pi", "/", "2"}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"Pi", "/", "4"}]}], ",", "Pi"}], "}"}], ",", "None"}], 
        "}"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.821525457143018*^9, 3.821525512248496*^9}, 
   3.821525728426012*^9, {3.8215257702433968`*^9, 3.821525779913389*^9}, {
   3.8215258228095407`*^9, 3.821525883197434*^9}, 3.821525950998557*^9, {
   3.821525982744822*^9, 3.821526000211276*^9}, {3.821526175789506*^9, 
   3.821526272305863*^9}, {3.821526376798194*^9, 3.821526401428669*^9}, {
   3.821526574945058*^9, 3.821526636948514*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"52693b14-cd22-4686-8adb-3f00ddc3a98d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$8181#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1mnlcTN//x+9My50sLSqKQhEJCe3b+whFpX3ThiQkbagoydZiSSVZW9Am
pF1C9+pTVEKUVETSOtVMezNTzfzu94/f/DHzeD7OmXvey+t17rnzGCWvALtD
dAzD7lFv//sUIuZ9/qcVZLxX8L8XjlQGKg2W37SG38E/DKcp5hVs8m5L2gce
wfzxXxQXTsF3qfzDsD34mkohxT0yRzhlSQHwPC736wmKr8nXLsx/fQIMg+M4
qynOVnVPx/JDoT/m1L1qPo5InREN+4xwKK+temlHcbvppaqspHMQ0txi82WO
Wk9tgVpE1XkwG1rjo09xzJaW4KzXF8FkTIdzcxZHMvoZrz+XXIbhI2n4rxkc
PdzmK8x5HgNFwfzkRRSr79bco5QTByZf5z/U4eHotQ3/lnnGVWB2x22w4OLo
+76ktalJN8Dz3dYao2kqn63quv9qEoDvrtmsMIWjUJ2bv0KrEiHb1tqHOYEj
YfBQefj6JjxOXidnO4ajepOqOq3yZMiJ1ddnjuAo0XStf33JLfi1XKw7iI2j
5VajZePPb8P26Y3NlkM46rZ1covNuwMl8XaKGUwcPXV8LVDIuQuqgV/H//bj
SNfj8i7TjPtwcVbFenMPjuz85NvvJKXDu8xYFv8XjhboApFilgHPJwK/vm/H
0cirIKm/NRnw5tYP67OtOCp721J6quohLP7usrasCUfbazL4aa8fg7fX8kjn
OhytMWuyGdDLhOz8c6eT3+NoXp3I463lmXB0gbcy+R+OGht8zWpLsmClxu/o
f29x5NGsmTD6PAfCDkr1uBbiCDkd7jLYkAvWjndSFubjaHXrXc3ovFxwi7s4
/0Uejpg/+a1Lc54AenrfovIxVb9/tUo7Mp7CjlQyQvwWVZ8x9+KUpBewW+VC
cthJHF2XvWdILiyA6SyedEUAjr4VXl6hZVcAy40zkvp8ceTGdO9Z/rMAlJcT
D0UP4MjfbX7Q2FAh3Lk4cdfREkfJRkdi70qWwKZbzR8NVuCorc3+mLhjCawf
1KoHear+IWB18W4J8EUOKmtI4ygnf7HMceVSOHvvPve7KI4qVtSkI80y+Djo
ydMeFkV/aMov+5zLIUDit7FDmShanbbwnvuDclj39Cmm9EIUHdHnRnztLAdB
ut/V9hxRNBbcaPL66CvIb3JcKnNXFAl3R36OD6+AoFga5+EZUaT2/mePVvob
SJVor9mkL4oMasznmZwg4cql3ZY2T0WQZHP2F52bJARcMf9y5JEI6u6i39pY
TMIWqI0OuiuC4rHXK+THSUi5NFNsHyOCugzWa40Ev4MNG5+x3bxEUGzR/P1p
wVXQPTztcVFWBLWkN5TygqrBaIlDlF+gMHqarxo+klgNMjoiZx4cEkZRby+h
3sJqOKfYWvvWVRit+2n48etoNWhXXr7evEMYRSx+3pkbVANn7tt+tJcTRquu
X5/vHPQe2nmDIo/eCKHAM1YHigNrYZB8de4Dj47M/Q1zGQm1cGlPXtQpFh2t
8lJje7yoha6oGwWLu+ioZbfoWQarFjw0TtduqaMjI/nKOx7H6uCv/LRYUwod
zSvf2Ij71IPQijNRbzfRUdbkAnB3a4BhK6eGOBcaOl5+KJ6+qhHq9uYm6ksJ
oLl/t1iOVzOk27xf9U5nCq5smsLK9raC5Hq2KtrDhKD1tbfIrF/w+eCXxVom
tcA7eCy/w78T0JOvu6/ubye83jrZJPh0wfvtCme0bw4TW8rkFskHdEGOpuPM
g+/DBP1Fe9PD0C7o5tj7tyxhEY8yPJ2LY7ug+lTu5nf3WUTXRR/PlrwuSJtp
DQp4yCa8zEP8FNhdsC3Qo3X26wjh9eNWbG7oP3A/PNsiXTVGbGl0Nt8c9Q9G
Uv8zMOwcI+h18gsqYv9BlJhcoDl/jHhUkXrj491/EJsq3b5Ef5zoSs1KYb3+
B7t3db45UTBOeHmXZmpi3bDGGQXL3ZkgDo42k2RsNzxy6ew+YDdF7D+T4Fye
0A2sT5IPLI9NEe5ClqwXd7qh3l/4reKlKcJJ9r9l6bndwODeHwkunSJ26RWG
nK3thgVflkv3LZ4m1M9f36DP6IEF+Pptvc3TBEfS9E5xTA+c6VidXWPIJSbu
0jY9vdEDhjr4qKsdlxhVflvz6HYP/DbTi2g+zCWYmprjiTk9IG6QInsyiUt0
uChbBX7ogc2C7NyDvVyiKoMvtBHvhXdPFWynY3nENY2XAdnRvfBs1PlufPkM
Ub/lR++p+F4IwyIeadXPEAytaY+dKb2AfVTfS/6cIS7p6Vh2Z/VCw5/oR1H8
GSLc5KWqck0vyBwdDXpqMkv4Orz8myrUB5HFX2syamaJXKcfLsfn90G3ptHj
s99niV6X6S+G0n3geKclxqhnljjgoVP5U7kPvF1qkY/wHOHi8/KevEkfaOcY
B7humyPMwl7a34rqg06fE/j70jni0pkf9d6xfcDkqK7+8t8cURUxvU0zoQ/2
3334tuLrHGF8XkejKb0PjJet2KU3PEdoX3m5QIqg5v/ey/ymzCdWP3hZc22u
D2qSWvWCY/mEV9oPQ3eRfkjOTf0vPZlPZGRMF69f2A/vyRXuLzL4hEKWzqN6
hX44/+W/hyfL+YR0/stIhmE/bOUVd6b08gk6+VLn0pl+0Kij39IyEhB5Cxdl
z13oh4hFXer7dwkIOzc/mdCr/fCs8KPqYXsB8Xhq5ejRB/1Qv3Fg7byjAmLH
xit51pX9QG7aUf84SUAMnemWq3vfD+dOObQXPBAQybXGMSZfqPha21bfyxYQ
PQfHD2p19oOq0qm9tAoBEX3PXXEZfQBW+0v/VPojINT7y64mzxuAqPpWZ8l+
AdGiJcVbKD0ACxSvjbePCIi1X2tasNUDoLs43JhOw8hafFNC784BGDmWau4g
hZHzTtGEiuIG4NUO36y76hhZVOUWtD5pAGS4NgdHN2Okq2TZn8x7AyD32GS1
jhZGPn3q++b20wEQ+jSUf80AIy27mk6d/TQAWZv2DOwzw8iJTerdU98H4IsN
m1xrjpEPzsbaBf4egLyg8Qcdlhg5LGe06SB7ADYjC29pO4yMt87u3yXFhMwk
cnuOG0Zqp2LOVfJMcDp93PaPB0b+ZrrWGCgz4ZFv21GR/Ri5KVrikfpWJtzh
3CWWeWNka9NRyVwDJuzyDRHM98HIKKXqSKUdTPh0VcmaeRgjG9+Euck4MuFw
ypdVQccwMmxeU911Dya42vKeyh/HyJUuG3VxHybsd91uXuCPkYHjf2V4IUwQ
TnRrzAnCSLlthhdPnGNCrebYa8YJjCTjU0aHYphQuEC7xvkkRkqpWXz+c4cJ
ao6b9MgQjOzF06VqM5jQmTx04EMoRlb0jDkU5DIh9JssRoRh5I3/TO/cKWDC
saD7sjmnMdL74b2fUeVMsP0TkXnuDEbqnWMtP0oyYW1ibf6ucIwU9zDxsq2l
8sceaNMjMPKffkqWXiMTjjxZZfyM4nI5Zr9SKxOMRe9/MD2LkdenjDbM62SC
Urzl968UezUnBoz1McGlMPHonkiqvkU9Re1sJgS3fIt+RfH8BL2pqmkmbHOO
2bT4HEZ2Hr+u91TAhPyzWj4HKS6x+BtxEx+EO1HBGx9SHLdOiwyXGIR7UV0x
Xyj2xOOEvJcMQsUl3TAWxVt7fplarhgEpVBtGp9ixn8aVzTXDkKW0nOV/3FH
xqVPCpsG4YBaRP//5hdFtkqK6AyChmSSZSPFMe4bHIaNB0F67ZDDI4rd9aNu
fzcdpM57KcKHKNaQa25/azUI9pbPPOUoFplauzzbaRDeznf2eUPl094UfiDe
cxCanb4st6U4v/BLZojPIIifdL/aQtXj4o1V/Z7+gxByxOGFJcUux0PXm4UM
AjG+LL6YqudGi4/+myIHwfDamvXzKaavW1G0JHoQGlyn4uypfjzrfq/bf2sQ
4h/q3C+j+ne+amlEY+ogtFZNOXyl+uuU4U+UZw3C94OL//yi+o+5LzaNKx0E
a5fiE+9PYeR3Pd+4oLeDcATGL2dS+slbUtmwt2YQTlTLhZ2g9GXfdMhe7fsg
/BrSW9AdiJGqha9SFnUMQmmkX9nlAIycjV/YzuseBMkLYzZylF6zzUv3f5wY
hEYx0SOSlL5574T9/WSGoDfhyx1Lyh9f0l0KHRSGQLLoDYR4YWTm2WcThquH
oMcsnpdA+clKzyF8oeYQlC8tr7zrjpEPCx7H5tsPwZ4UbQbXHiND4qc/prgN
gZzRePNTW4w097OQOHdwCGZdXv2ytqb8vnb8lvWJIYgWoxcdo/y+K93k8UjS
ELBOzIiOA9XP2saOC/eHYONQpeGEIUa+H/WUk80cAvWxHPNuPYzcuSP8ul7p
EGhyTs1P3IqRJgPFoRd+DIETQ3hYcQ1V30UmRTKdQyDf7/8iRZnyn0HjUHb/
ELgN4pf5yzES4ocOfOQOgcOjotj7SzDScKuKpYzCMLSUJnyez8DIcPfi6OzV
wyA4f12UL0T58fK2d7obhyFIiK9MCASEXquHtofxMHT+Fr/4lyUgtM+mrMze
PwwFzl6sOx8FhMYHfFInaxiu9/Iq/kYKiICRW5vqnw+D7cjLR+UnBUS+/Gpf
97JhsOObWgT4CoiNfuhP1IdhILZdV4twFBBqUqfr6gaG4cnVowaL1QTEajdm
qps6CwJPSvW7f+ITS9gNpudesmDBkhVpNbNzxJ1E4sAAwYLLYhG/5lhzhJxm
UYR9LQssvmPx8n8pPn27aG0bCyRNbR7NVM8RS4W8ljfyWNC5c9uc39U5YvmS
6cmVxmwIleSbyUnPEWtAKauqmg31BVnRWuKzRPZfaXLDJzZYzs37zZibIdZc
Ev2Z8p0NZtw7aVWDM8TaukHJY71saLfc9m6gdoZIXudWKSY8AhsCZDzELswQ
KcUqakUqI7B0qeWHTDaPuPehgiZ0dASKNnz2YrziEiOdBafZfiNwkcVl62Zz
CTNe9ujPwBFwP7BbzekmdZ7ZcPNvSdgI6BSsEnI+ziWsko6984kdgWkpnaaT
K7kE3UPhfH3OCLxemnJD6yKHODZ2FkvqHQHWwPt/JwymCUPFbYKV3qNgsbH/
mUvEBLG+U7L77MkxcO9TqHeoGySe5y46Uho8Dp5fvYJHjncQEb89mtZHTwD5
N3pjxaZ7xISZUeqhKxPQqXmzdzbtJuFXqHA4PZ4anx6YGFO6Qrhd+slbdHsC
MCzrQdVkj7G+2l5lXs4ErPTr/LKQcQ+4pxyCausmoHza7DqxvxhCFlpIHFo4
CUeOftmhi95DkKGuRVryJKTNfskYmWoBzD/53I07k/AhrOn+KosfEJ8+Uhz1
YBLo+K9vsuk/II/+ROFg5iTk2HfFaJu2QletPGttySQkLddS3pfYBg6OMwmF
TZMQXHOhkL/0F2j7V7ZUL5qCwKbJwbiITqhOXzq/bPEUdKxddW3bo06w+xoC
OUunIIFpt6/pQyf4a27KjVOeguQNvTOXFv2FHF76aastUyDXa/d4WfZfkIs5
r9BqOwXesYf+jdd0AS99h9dgwhS47I//a9LXDcbTRkmbb03B6v1MhZJ5PXDe
Sqcq9O4UNC9YYjm+sQcYc+uUhR9NgeJcx7f2Ez0g6yrRpVA8BU9w/ae753pA
Q6b9gNX3KWh4YJATJdoHJ441JSa3TQEvL/vZmzV9UFbV8K69YwocXt2b/s+0
D4yCCKXDvVMg4fv89dboPjD/nPn33PQUaGZY3btJ74dDsQEHCuWn4cA75/Nb
Rvsh98+RxGnFafAdoHlLig/AkLbXOyPlaSi69kDppdoABPc4KNWrTcM39qUH
ngepc5KJ/t8ug2lQDv+cK/VtAO7NCh+Q8ZwG2aX/qgYymdAYeG9/6KNp0Pm9
TDJyxRCoJUjOnMyehjQ/rvWHrUNw8UX0reC8abg+sV2ow2wItFnB9ceLpmGQ
m3XseMAQpB6z0PSumoYe+2/dK94Mga/PLG7bNQ1tev7wymIYqi8HP7LqnYY9
y4c+E+7DoJjVb2jJpOJfLX4l8fgwNP5rDjIbm4YnKkZ6KfHDoHPg+U8jOgdS
n4hfUP48DMLuni/UlDmgOlhdorOdBZ7hzbtV13DA4gre0G/Dgpf3zLtV1Dhw
wvAWzduTBb5t2vJKWzhw4YDDtfIwFnx1kri4xIQD2A0ivjWPBWohlxVlTTng
aC8n0lbGgku3Zl4uMudAf5ntusdVLNBt7htaaMcB3dBHZsnUvpNmSzoJe3Hg
nfDlyH5hNnACtUdpPhyYOcwQ0ZJgg13Cs6uCoxzoUMFazeXZIPLlDskL4oBz
koTOtw1s8LMMUhs9z4G3aQaFVrZseH+sr5p1mQMvBbuCuveyYcVVj31DcRyw
OXNq/XYvNnyr253cl8iBstyoo27BbNAzU+Z3POSAkMac3NQNNmg+ro/9kEXN
F3GrLEhhg7ogWLrwCQdab+pt005lg/LL/1QvFXJgUkii+uETNihI+xUfL+XA
xh8dZTEv2LA4QMbY+RUHPtl3+OmWsmH+Wur++44D/MtX5vEINoheXPhbuoa6
/qmm3nk1bMD+lB6Zq+XA62sXA3rr2DCRIhrZ2MiBgNk3QXPf2MAay2dUNHNA
Ly7rr+4PNvRbOd983MqB2IJipvFPNnSI5uaGdHJgr9fxl3ldbGj1stm6v5sD
osWGJySpffdbJeft7n4OGG45XY4G2NCw9OGurUMcsLOpumgwRNUrZHeTwghV
P+WRrxibDeS3UQ/RCQ4sOSydkTDKhgr1e/3saep60acGmeNsKLlicqJthgPM
W3cKJabY8KKXOVcl4MAuD50R/jQb8kxuxj4T4gLmuDOrnMuGzDQD6RScCy55
rM+GM2xI4/1LPTefC+/QnWNXZ9lwx+ma6lEJLhwt/nM6c44NSUWaxXbSXHjg
dJ8Tw2fDNfEOI8MlXPij296rJWBDtO/lWpVlXOha1b09n+Lz7zfaS6zggmaq
nsQoxRHKLR0cZS5U9t7cxac4JDLySNcaLswTdLO/UxzYvmb8oxoXbB46i4RR
7Kv95WypOhfMd1rHdVPreSeFMtK3cKF1+ZGIZRR7slbcjNXmgrdi6B8FKj4X
81rFYH0uzB+MK+6n8rHPDsx1M+bCw8FebiSPDVZ0+a07Tbhw2GBhyR8OG3Z5
vnurbsqF1Ocl/+ZR9TGpOLpLzpwLdfWfrmCTbDBcvKiJZsWFls/nn5JjbNAO
rvAYtOXCdPaWXRYjbND47NXf7MiFPewzBzOG2aASXTyX40HF/8BZKa+PDSu7
3GITD3CBedWw3rObDUuNhaXDD3Hh4MxefkcnG8SnHFStjnPB8LDVEsM2NjDs
5op0grjgOqwvvIy6T9Pzs4yUTnGhj3/lWnUjG6YPTdlNRHCp8zL7fOgHNoy9
S+voiOLCRbMOTlQVG4YUzY58uMQF37mu5Y5v2dD5/fbZe9eo61c6xXsUsaFu
p14uesCF+rhVj9h32RD2IVL9XAYXcsXJpjdJbFDdXV3yNpMLsh2nzltcpfpp
af1O/zkXRsTvhjwPZ8MO+0PtmpVcaLzw6vclyr8TzXn7T1RxQaWPK7LPhg2P
nUZ6C99zYbJ80SzPlIrfNXxc/QsXxDNHL4ZtpfS7P3HBuk4uKKx38LgqRvW7
qyXpcDcXxIbXOpzis2CFt4J8dj8XzulwzymNsyDycI7KqlEuMGQPviB/ssDQ
/62xIp0HDnub5itQ+9nL8IFAqdU8UBdd+tTBgAU+c+rT1qo8aDeS1Tu6gQWL
z508G7+BB7Qqcfo2RRacvCCIm6/FA7m2oQR9/jBsiZN9LGLKg09nz7x3fjsM
+SnbvnMP80Cjh3xiqTEMnnIxbrp+POAu0PVNUxyGhfca/oYE8mBd5YOXJfOG
wS/VmTUexoPypn7nTd3U/SPzOM6K4wG957fjvuQhyCq8q9f1lAexLwxOkgOD
4Dvjptb6ggdbrKzJ3mbqOWjn8mWfi6n1aEbP2olBeNP6aPbVax7ofAwm1lPP
HU2Cp0TiRx7Y53YcOGU0CDSryp3bBnlQbe1f+foSEzyYXbYZajOgavNSpY7V
D8qaWSYp6jNgJlrT3dTUD/1nD2+9tmUGprLHYl+U98NJqSGZMP0ZGGJtmG47
3w9XdSd/WJvPQJbu72K+VD+8isY9BUep+RLiDx6t6wPZVRt8PZ/MQNRkyaCW
Tg8kJF11evJ8BibelLT/ku6BefRBk4nCGcgoSjexHekG7O+TZVcqZqC4vWXr
49xuGEpb+6n04wyU7AvOHVncDdVLV2ksZM0AueS1tBuzC04uWjr1essspOTv
eFl9vBO+0RgX5N/Mwjof4ZnP3d+B9fyupw05C4lLjrFy476DmOt6g5jqWRDs
2bbQQP07oCKriYmGWWgrLE+OC2mGfK9bPo0ds3BYxs3+l1ATXP1P2SJGMAuS
krqzb6UaYcdlI5lJkzlY+S3joufMf1DKOJHdWDcHkqU171aGZBMbZCV9vWr4
wMgrVffR/EWw46dktrYIwPLz8LWglUPEqpiYTQG+GPrsnFQBhhNEcItmpJcf
hnoDPhyUs58gSJWuBkd/DF0pldDvPjpBeFYb+hoGY+ig7R9hx9sTxD3aWKbY
GQy5AU3nzugEsSjCfWlmHIY4HZus4h9PEvSgzSJtuRgS08ypuDw7RdiSv+0b
8jCkmKYumiQ1TWRIXHtEPMPQSmufPfFrpgnj/F7ILsCQ/3tZPyebaeLM4P0z
J8oxdOhNo57y42li7JDoyMJaDInK3ySTdnKILtef7SZ9GIp2aWrddJZLLDBy
ztk/gKGAxv3d2YlcQmtF04nIQQy12nkk4NR5PvZf/YIKNobyU00dL3/mEpv8
Kow3czB0TSfsaMByHhFx9u6jFWI0lNRBI7pf8QjZDGffWTUatZ6mXeLvGcL4
QpP20o001P2j/afIyAxxxNtaSHcTDZnFQtJ+2izxRtXswYmtNOQq81ixdtUs
4VWo/ZlpQENf46P+uB+eJfKrZLe0WdKQ9rKhkeiBWWJXTxO31J+GItKe621p
myPOro8PfxFIQ0c0pHwte+eIoqBdc7nBNORz9HzknvE5Yhn/DfYghIZSG/Xn
Cy/kE6zF2fiFSBo6tkeZQMAnkneFyVrF05C/bobOQBqfqIvfctssgYbubFly
4Ggen+A3D8ltS6KhGE0jly+lfOLwgQMKmik0dNHG9rhlA5/QP2O+amkaDWWs
UT4ixuETnU8VNvc+p6HjFZlpUeYCQnaspejPCxrKT7y1yMlBQJjrJmq2FdJQ
cWyYk6SngCiuFtFtKKUh9f8UF20NEhDRHSzjorc0lI7qKjalCIgNEu8sIz/R
UF7oEm1uu4A44Bj+OfQLDU18Hf8h809ApNzXsgn6StW3ueiQzKCAEKzNs/f+
TkOmFwIkCJ6A+IZuupp3UOMrWbf2L8DIsOBDRxYP05Bqtm1B2VqMjLVgHdZn
U/Gd97FcvR4jb68OPew5SvUz/e9olDpGlrXE+mRP0tDtjP0GuBZGjus/89bm
09AyBj5nug0j6TJa3q4YHe1Pt5LbsAMjFw2/PRhJpyNQuCuEmWGkRvoXr/ei
dHStY1T9pCVG+guN73eSoMY95i+/7oSRZ3+F7z8jRUcVewz5fS4Yea1UeH+a
NB15b/99erMbRj49vHhf7xI6Ct+Rppawj3qeR+me85bSUUn9efusAxhZL6/q
qa5AR+/dDghyD2Jk/0c9j5CVdJRbGlobfhgjOZlV7veU6WjQRqrd/ChG4pEW
7pWr6cj8qZ8z4xhGrtHwcBNdR0cPy/FzVv4YqSXW66q2no5Kr+5a/iMAI3d0
+btabaSjz357pK2CMPJgctTelM101OEQNSB6EiODj4vtrdhKR44lVuSuUxh5
wTTJ5bcWHTV2KrWGhWBk4oplLnRdOjqCza6/HYqRGZzHzmv06YixfbzscRhG
Fnzd4GxuSEcyA5tPpp3GSCKv1MnfmI4md095xpzByM8XjZ2SEB1ltCcFe4Zj
5G/3D45lJnTE3+qftyoCI4e1bBzbd9CRurwQ/QfFs+JtDnxTKt6znSfDzmLk
gv4DDsq76WjRtSd8PBIjl71j2pta0NGnPNn7lylWu3fC3ncPHflfHNk5SrH+
iVm7eGsqfnzpjPk5jNxtedmuyJaO5oVFlyVR7KIibtdiT0dyR4xP1lJ8hJ9i
y3Oko2M1nhpDFIf+WGG73IWOTv2S65ujOLog18bElY5EPIuS/8cpcZttfNzp
6LH3Za1BirO8KqyveNJR5Wns/fv//f5osN06fz8d/biXbZJAcbVMg9U3LzqK
MZbINaO4adjBasqbjk7u7R0bouLtet+xZ+lhOlp/cGhFFMVj6T57jI/SUZ/r
1HoaxbTTbEuvY5TeGoalA6l6SNqFWUYfp6PypsbmBqpeK9fTLPMC6MhkVdGx
JRRvEr5i8TmIjnJEX323puptVXbffHEIHU19M5C7QvXnyLiXQDaMjsp2d9qk
Uv27qKFWInuGjjT6TuVkUP0tzytXlI2ko9DnsdmhlB6+9Z37JhNFR7/1dCws
KL0MrzaLkblAjb/SE5U4gZHK6d9HpKPp6Ge+eblPIEYa/nqQJR1L+SWT8YxH
6dFZ3ttV+godiSedfhF5nPLHzbH/FsXT0ULZ83+cfDFyKkbitlQKHWX+mHxr
RulfsqbFQuoOHXnKP2O4U/5YT0/DpO7RkbVbvct+yj/7Izb4SqZR+rpkKqJH
+as+cLeRRDYdPVEeClGzw8ju55Jj4rlUf2WVmyutMVLA/JEtnkdHO539NLbv
wUjNQz6S4vl05Cxl0r1sF0am7b34b0EZHSWNXVVfaETln2J+Z0E5HSnfjz+t
pE/1q0lqz4IKOiINLd+p6GAkwyqjbH4lHUkk8kz5GpR/TN7GzXtPR9H1L9TZ
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
DPW9YolOUrzZ4InFjJIY+v//Y/4fXjhIcA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8181#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{{{-1, 
          FormBox[
           RowBox[{"-", "1"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {1, 
          FormBox["1", TraditionalForm]}}, {}}, {{{0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 4] Pi, 0.7853981633974483], 
          FormBox[
           FractionBox["\[Pi]", "4"], TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Rational[3, 4] Pi, 2.356194490192345], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}}, {}}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{-1, 
          FormBox[
           RowBox[{"-", "1"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {1, 
          FormBox["1", TraditionalForm]}}, None}, {{{0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 4] Pi, 0.7853981633974483], 
          FormBox[
           FractionBox["\[Pi]", "4"], TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Rational[3, 4] Pi, 2.356194490192345], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, Pi}, {-2.7358123701992865`, 2.999999999999926}}, {{
        0, 3.141592653589793}, {-2.7358123701992865`, 2.999999999999926}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Numerator\"", "\"Denominator\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.821526177972069*^9, 3.821526240868594*^9}, 
   3.821526273101308*^9, 3.8215264022464037`*^9, {3.821526579796404*^9, 
   3.8215266054800673`*^9}, 3.821526637567206*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b3985c1c-4061-4509-b676-6ab050b9379d"]
}, Open  ]],

Cell[TextData[{
 "Select ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.659", ",", 
      FractionBox["\[Pi]", "2"], ",", "2.48", ",", "\[Pi]"}], "}"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f8cf12f5-7dd4-494d-8921-f2062834f19d"],
 "."
}], "Text",
 CellChangeTimes->{{3.8215267067381763`*^9, 3.8215267277726603`*^9}, {
  3.821527204931066*^9, 
  3.821527215097108*^9}},ExpressionUUID->"0f043d34-5ad8-4e0d-87df-\
1dc1c3b2bfc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angles", "=", 
  RowBox[{"{", 
   RowBox[{"0.659", ",", 
    RowBox[{"Pi", "/", "2"}], ",", "2.48", ",", "Pi"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8216988625820713`*^9, 3.8216988754747562`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"9398e19b-bb8c-4a78-967e-36ceadf76b6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.659`", ",", 
   FractionBox["\[Pi]", "2"], ",", "2.48`", ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{3.8216988815035677`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7e76e42e-5aec-4ca7-8a04-07c9a6f5c076"]
}, Open  ]],

Cell[TextData[{
 "Functions for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dcac52ad-be1a-423f-99c2-3aae2e1a629a"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9fac17ea-5463-413a-b3df-f2efbde6f6d3"],
 " coordinates given ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", 
     RowBox[{"r", ",", "\[Theta]"}], ")"}], "=", 
    RowBox[{"r", " ", 
     RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ef4ddcf7-bbd7-4ade-96df-fbb39041a8d2"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     RowBox[{"r", ",", "\[Theta]"}], ")"}], "=", 
    RowBox[{"r", " ", 
     RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "28ab2d7b-9947-4a9c-9e01-3346ccb1d004"],
 "."
}], "Text",
 CellChangeTimes->{{3.8216991206246*^9, 
  3.821699162022852*^9}},ExpressionUUID->"0c2aea8b-fd87-441a-a326-\
5c48894e3625"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xCoordinate", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yCoordinate", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.821698908694977*^9, 3.821698972559576*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"1f41bbf4-ac31-46e3-800d-3be52630f1f9"],

Cell[TextData[{
 "Calculate the coordinates of the four ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a3b1ef6b-8244-4197-9201-d9b085cb34e8"],
 " values."
}], "Text",
 CellChangeTimes->{{3.821699171062147*^9, 
  3.821699188374385*^9}},ExpressionUUID->"8309ad21-495f-499e-a7a5-\
68065ffb1b39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xCoordinate", "[", "angles", "]"}], "\[IndentingNewLine]", 
 RowBox[{"yCoordinate", "[", "angles", "]"}]}], "Input",
 CellChangeTimes->{{3.821698976299727*^9, 3.821699070083273*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"65174fad-addb-4d92-913b-4dea82e5f110"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.726271421369012`", ",", "0", ",", 
   RowBox[{"-", "0.7223638632942941`"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.82169898137329*^9, {3.8216990240598993`*^9, 3.821699070691038*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"88bf32d7-0e08-40a0-9975-e4e0504ed458"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5624999873697892`", ",", 
   RowBox[{"-", "1"}], ",", "0.5624758775871054`", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.82169898137329*^9, {3.8216990240598993`*^9, 3.821699070692492*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"4aca46e9-9c69-4e0b-939b-3f25c246f106"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 1.5", "Subsection",
 CellChangeTimes->{{3.8216998586968403`*^9, 
  3.8216998617263517`*^9}},ExpressionUUID->"622f1d5f-67a5-4190-8be4-\
3a8e7870b2aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"slope", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "\[Theta]"}], "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.821699870120089*^9, 3.8216999344183493`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"e6935830-d6a9-4bb2-9ead-b5cbc1f55d21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope", "[", 
  RowBox[{"Pi", "/", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.821699937960335*^9, 3.821699943417244*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c14529be-a425-4eba-84bb-c5034d49a0b6"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"5", " ", 
    SqrtBox["3"]}], "2"]}]], "Output",
 CellChangeTimes->{3.821699944027421*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"a0dc94fd-68ed-4c4c-b602-6a4974ef0416"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope", "[", 
  RowBox[{"5", " ", 
   RowBox[{"Pi", "/", "6"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8217000526964283`*^9, 3.821700057841106*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"3fc578c4-41f3-4515-addd-1c0cc0bce7dd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", 
   SqrtBox["3"]}], "2"]], "Output",
 CellChangeTimes->{3.8217000581143923`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"435ea6ec-19a1-4b7b-be12-b7d0d3de6ed5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope", "[", 
  RowBox[{"3", " ", 
   RowBox[{"Pi", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821700008704812*^9, 3.821700018607339*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ffc7a930-1c88-4dfe-9287-077184e6fdae"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.821700019192178*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c5d6f601-fd9d-43d6-b22f-ee1a3f2f4cd0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 1.6", "Subsection",
 CellChangeTimes->{{3.8214494590663347`*^9, 3.821449464898355*^9}, {
  3.821527456271599*^9, 
  3.821527456838999*^9}},ExpressionUUID->"6825723d-50f7-4f04-856c-\
384c1e173b97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8214494667582293`*^9, 3.821449494454571*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"e21ce143-5322-4a72-81fd-6d7b751d6c96"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
fF99XnwJuTLnHq0jmJt/60c6jiX0PPsJSxvB+0eoSvnTi+iJ1Wr1P4LnDHb8
dWpaROoR+91r/8dBETfO5C6ig/Pt0nkE2y5kD7JGLqJBC8bmjwRzXah92+y2
iHwuBdg+IVjM/6JBnNkiauF05FMi2IHJ44HT5UWUYP37+xaCS9gaf12XXURm
jx/oUAl7Ffk9rY4KLKJHx72YLAlWTun14SP6poGYZME2grfekNy93r2AXpVa
vUwj/HnXM/j0UMkCkmxx0VYiWDMnwqjKbwE9GYnBF4h4BPV7exY/WUBrW/fr
5BPxE2s6/rTw1gI6NHcucD/BfIqSi9V7F9DwJTezTkIPlrpu8f9YFtDXb8qc
kgQPWpWbjE3Mo1/+Yx0PCf0s2Uyc3/ljHn048JytidCXcE/sK/xpHklzXLBc
JfToLrnGZ+I6j3pKUzj4CS7LbdUsUptHP8d16KTziHzJXRNdlZlHnpezdI8Q
et49Pe0oJzCPws0aNvcQetePkub61TOHHBqbxaeyyTjEptmUs2wONd9h+l76
nYxHt27xMUieQxpbA0PeZZGxzH0dc0G7OXS8LPIBbwYZf96ZcL6OYw5R6tHP
T8lkLPAsIOLy7Cwiz1ToHEgi8vnf4Mm/LbNI7cU+q4QEMhblP+g+9nkWDZ5h
YfL7SsZrfM8WLU7MIpHbbFeGiXqh9tZw365ds+jAgt3G/ggyLgx05m1hnEVn
41tO630k45ql5+a6dTOoqHgtKDGUjCW6b0XlmM6gEHOJnmZ/It4avpctLs0g
7/wDdBFE/TJXTLA7KDWD+GV3yej4kvGzv7Nvfi9OI+/J7UPpXmR87Zlorbbn
NLqUri/fRdRHlrf6Vpr3p9Gb30OB6kT9nKr9u/fGlWmkfyvqyPdnZNzjR2F3
4p9GIia00wY2ZBwnFdJ+LG4K1UjJP5UzI+wZS+Vyej2F6qZjnDWMyXiXztJQ
leUU8tGNXLxrSMaGF1lqXslPoUMDwZpGemTcbpSTP/d+Es1Xht4eVieu//ix
53XPOPJZe6nEcIyM7V0yM/WSxlFCUjSylSHjlZYa6tmn44g1U4u75zAZG8Xz
1muyjqNg5sorofsJ/3TLvH8mO4ZSfeVm3wiQcYu9Rj+d9wh6v1cOwpdI2O/7
7Qn5ayNoSklF4fEcCe+ZcPX03jWCgjNbl09NkbDHD47Rx9nDiMnl162cQRKW
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

        "]]},
      Annotation[#, 
       "Charting`Private`Tag$8984#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821449494772403*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f91df17e-f0c2-4a2b-ae62-07acb3c21e94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ",", "\[Theta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8214495252085533`*^9, 3.8214495676730824`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6b103d69-d148-4966-afef-89eddbd7a007"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.821449568336532*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"cf438a4c-f491-4ee8-9797-336335b0ce2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.821449577449267*^9, 3.8214496040083437`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8ff741be-ed02-4d68-b703-f50f3ea66611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", 
           FractionBox["\[Pi]", "3"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         FractionBox["\[Pi]", "3"], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.821449604257502*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"6cda622c-6db6-413d-a65a-583f15d0d5dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numerator", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "3"}], "+", 
       RowBox[{"2", " ", "Pi", " ", "n"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Pi", "/", "3"}], "+", 
       RowBox[{"2", " ", "Pi", " ", "n"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Pi", "+", 
       RowBox[{"2", " ", "Pi", " ", "n"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821449627697131*^9, 3.8214497046167517`*^9}, {
  3.821449835575581*^9, 3.821449838267501*^9}, {3.821449871872199*^9, 
  3.8214498761682377`*^9}, {3.821449932580902*^9, 3.8214499357505903`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"303b0b98-0069-4394-9cf2-ffaf7f001daa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Pi]", "3"]}], ",", 
   FractionBox["\[Pi]", "3"], ",", "\[Pi]", ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"3", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"5", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"7", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"25", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"9", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"29", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"31", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"11", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"35", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"37", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"13", " ", "\[Pi]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.821449659626708*^9, 3.821449704887476*^9, 
  3.821449839599865*^9, 3.821449876731409*^9, 3.821449936358712*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"83246c3f-5a2b-4082-aed4-7d7dc07d8be0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ",", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.821449746830825*^9, 3.821449768219898*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"85918481-5d8f-4fda-8b12-09ab3c1bc87b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.82144976846699*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"241f8069-97bf-4374-af4a-d51e3b217526"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "\[Equal]", "0"}], ",", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.821449778327627*^9, 3.821449811896137*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b50b5e19-152e-410e-84b1-9a4392e0e6c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"}, "C"]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.821449812108707*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"67f08c9e-e323-4f20-acc4-8dc2a581968b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"denominator", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"2", " ", "Pi", " ", "n"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "3"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "Pi", " ", "n"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "3"}]}], ")"}], "+", 
       RowBox[{"2", " ", "Pi", " ", "n"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Pi", "+", 
       RowBox[{"2", " ", "Pi", " ", "n"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821449841766255*^9, 3.821449841962633*^9}, {
  3.821449881418219*^9, 3.821449885178317*^9}, {3.821449939575704*^9, 
  3.821450043977611*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"bbd428c8-a0f6-4e05-bdc1-fd5ea72ce6c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "3"]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "3"], ",", "\[Pi]", ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"2", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"8", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"3", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"10", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"4", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"14", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"5", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"16", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"6", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"20", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"7", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"22", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"8", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"26", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"9", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"28", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"10", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"32", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"11", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"34", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"12", " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"38", " ", "\[Pi]"}], "3"], ",", 
   RowBox[{"13", " ", "\[Pi]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.821449986522987*^9, 3.821450044711714*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"53f8d378-7d26-4bae-ba05-26de7921063b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{"numerator", ",", "denominator"}], "]"}]], "Input",
 CellChangeTimes->{{3.821450048868585*^9, 3.821450059163582*^9}, {
  3.821450095495707*^9, 3.8214500984703407`*^9}, {3.8214501525216093`*^9, 
  3.82145015846447*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"fcb0782f-d281-4d0e-8e15-fcc2a9ed97b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Pi]", "3"]}], ",", 
   FractionBox["\[Pi]", "3"], ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"13", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"17", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"23", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"25", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"29", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"31", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"35", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"37", " ", "\[Pi]"}], "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.821450158693198*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"dc450a39-1889-4070-b901-9a9996420018"]
}, Open  ]],

Cell[TextData[{
 "Choose ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    FractionBox["\[Pi]", "3"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b9acd7a2-d03b-47b6-8426-46c436e69b17"],
 "."
}], "Text",
 CellChangeTimes->{{3.8214518653156633`*^9, 
  3.821451880310471*^9}},ExpressionUUID->"22c96e72-cf94-4813-bd70-\
82b2e46e8649"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"x", " ", "coordinate"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"Pi", "/", "3"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"Pi", "/", "3"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821451849393326*^9, 3.821451915300436*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6a104f83-4d16-411d-a400-adff41580a4f"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{3.821451916225876*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f2238a53-8512-4ffd-9a53-485df6b5944a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"y", " ", "coordinate"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"Pi", "/", "3"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"Pi", "/", "3"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821451920383336*^9, 3.821451956235314*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"a6b7104d-4276-4e9c-9d0a-d8b504724e61"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SqrtBox["3"]}], "2"]], "Output",
 CellChangeTimes->{3.8214519565364656`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"357db279-062e-4cdf-bc33-52c603e3c9df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Integrals of polar coordinate functions", "Section",
 CellChangeTimes->{{3.821530119991826*^9, 
  3.821530129719748*^9}},ExpressionUUID->"734d16cc-f4f9-4cdd-b80a-\
08b8aeca3f69"],

Cell[CellGroupData[{

Cell["Problem 2.2", "Subsection",
 CellChangeTimes->{{3.82153014656627*^9, 
  3.821530157097477*^9}},ExpressionUUID->"29e3f97d-7f61-4b4d-bf0c-\
ae225fdb5c94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821696954893738*^9, 3.821696981228215*^9}, {
  3.821697032288004*^9, 3.821697036292738*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d585fe09-4c1c-4703-b933-fa314a06f0ef"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxcW3k41O/XVpQihYgohCiUpVCpTpQsRTtlqa81W4WIZN+XFCEpkuxkJ7I9
1hn7vq/zsc3KFGVLvPP7951/5rqvmTnnPuc5zznnnrnmiOmz2xbbmZiYgncy
Mf3v+f8/Ui79nJrOcYGSg1x/5o2IF78m2d+ozQmCbP9bQd1GrOCX7lh/tC4S
XD7l2ihpCsCK6cx25ZxYKEpT6X5kJAn/zaPDzB8SYPSlvwoJFGD1gr7l+dok
4KN+ijugcQ5Mx3Hml7+ngB4hfKUZUwXO8gEiR3Y6yN6yZY0z0ACxuJ26UYlZ
wBXyang8XAcs5tuWW6JyYPuNF8JVF25DZpfBkYHL+ZDhUHMxjUsPvJ7WaMVW
FcAeqz0ZsWoGkDMtkiauXAQcBalL7l0P4WpSNellfjEkXPRbTxw3ARXZ4nmb
r6WwfdfrJs87j4HduJR/U+AHsFn+88Tu2ICo4pO/GlHlUHDq15SH7xMwPXOw
YcG3Co5OmdpwKzpC+PicwOX1aphiNiMEcjmB892PAZ/P1IBqUnDYMssLIOeU
3dmVVwuVbMV7kuTcIExSgvjTug7s1z5E4K3cofanbl2yeD3o1BWn1pR6wq32
xp5HcQ3gVdQUstnmA0z+MkLLXniYl5S6Ia4cBIHcN779OdMEo7cvnBjKCQZn
leWE3F9N0NIipVYnGwo7uRSvXTFtAWUep2eC98Lhi7CfWQO0g4PJ0/N+3O9A
+t7xhLvL7dCnocCvtf4OXC5xxoR/64BOG6HMEGIUEAue166yd0FMzvNiq54Y
UGd2XRdz7gZRs1MCB8lx8L3vkuFiRzeo2cXskNv4CBFa1vTXx3ogneu930ee
eHj1hD9TdLQH7Eezcu/e+wwDpz7rFl/og8Xy2FRCaBKclFQyfbcyAM8upoUm
4dJAj/wtknh3EGQMHkS9C06H8y41F+YLBuFYg/oBW50MKK9VOLHDdgj+Pvv4
o2YyE5z0HT+rDw9Dz1tmNk+JHLhizDq5cWoEdlZ//im1lQPTYSHbDd+MQLbh
x7W4kVy4dMjgEqvaKES1daj3X8+HLMv5PVspYzBTYmnNfKgQ2nZ+7mrbGIP1
L3byglGFoN2Wce7M3XF4/uf+bS/2IqBqgM/0tglYDDT5doSpGDS4XPPt7k+C
y+8L9t6rJRAgPPA7a5UAabNlqwJi5TD7NAguHMFgV3ag0pecciicMkMxWhj8
a85PUDtbAVlcSXqxcRjgqHoiPXcqwaJ2lNChNAXP5H4z18ZUg72fWNhXi2mY
PET2XU2phb/7jS4ah07DPQv5QePFWlC9rvtyIHcaNv9cL1a6VAejpL/V21em
oemT+rDKeB34BvLeVvKfgQNPCRP/HWqAn/+UXLIjZ8H583EN5xwczHZVv1zJ
m4X90SWaaX9xEHO8MoOlYxb6QHbjiDYe6K+M75jsngOpA3YHloh4EDC64i3o
MQfUv9tYOiWa4Uy1ieGd+0QYaaOmbOW1Qs7IzMO3jkTINTtbxr+9DY5a+vAG
vyYCbZvqKdO7beBx/eznXEQEdQm2OK+1Nqi1tjBtFiWBvb6WRbF6B8SrhLEw
j5GgpOHfNjXHLth6luC68IsEw7/82m3iuyAyx5k/ipUMff2fVhJwXRAaSxVk
VSBD6mbipLBgN1AvzcrE+JGhm7VQ9mVDN2hEyy9diSVDiGu32NhCN/yzPur9
LYsMUSH/DNUO9gBshel+7SLD7NlDLLxPe8DWsilO/CAFfo/f21/O1wvLYd9t
3khRYH3sPJuQWi+EE9B4rgoFyCfqeTzteqHSVEV6vzEF9GwS8Cdre+HizJS4
ZTwFVow1dc/a9AGbyo+/QhxU0Nu1UiRZ3g8vbE9VpR2kgnZuSt/e6X54ahoZ
MHeUCoqdjZdm2AdAxt/jV/gFKvjuUnqjZzwAmXnPht2sqfCynI9FdWsALnzJ
flr7nArujimBvpKDYCWHz0ceVOBrnniVfWMQlAYHRaYjqLCtrvdOfuIgLEG5
VGMRFZJvfxt6cnEI9A/FfGyqoIIuZ9PeXoshyNpT9tGvngp/TtHn+MOHgK5Q
d0OkhwpfYIv/8ugQlEuy7N4+TAXDIcPao9uH4Y3ZZcNPk1SwUy7MmD02DEGT
S+O/qVRwM7rZt+Y8DJ+0LQRKflEhYbuJ9fX4YfhK7WU9sUIFfkmWSde6YfAy
Ocp/ZRsN0mq1uIz2joDfw3Td6R00oNW8PMJ1egS+PTQ3PsdGAxw8/BH/YAQO
cIMiJzcNNkJzpU+njIBx2buDb3lpsOo0anSxeQQiM17vwfHTgHdTvV5wYQR+
hYsLlQjS4ImNTVgr9yhM37/8yEiIBt4Z56euK48Cx3QdViFCg5Uq6T+fDUeB
N+JJWa8oDSYUji7WeI1CNeXfcrI4DfhffWAtTB6F4otChTISNDj60M3cAT8K
+JNWW08kabDPWPPMJmUUqjTM/zw+RoPwA3uK9PeOQfHbkGyB4zSQz3y4w0N+
DHZxXzgXyMB5++3+e3J3DAYfd5dnMbBw1PIfSZcx2HMhUCOYgU9uPVjNjhsD
9p6gv0IMDOJvP65WjMHcy4XFpwz7twVlOTkmxkCJt1rbleG/NfFFOGlrDMJC
ZkVUGPxIploaoUfGwUXxYnQpg/+SkeLzX2rjcM4krGGeER/noRcah83H4cC3
lz3jjPgTOVfX9wSMg9KLz5NBjPwoDRo2otRxuK7hspfGyN8+77WJ07hx6JK3
9mU7SIOp3mlv27lxICvUPJpm5P/0e+qM6c4JYHub2/qCcT7Ehq/qAhIToCR9
ndawlwbi/Y8mItQnYH0qhtTOOE+3+UvURvMJODJqR4rcSYOzh2Uzy/wm4FB3
DA/XdhoQIrB7Vl8nYOeTh3Gqq1S4mRvy4u/EBHBnRLN4LFKhTWvXB9OtCagn
eqta0aiQJDao4CI8Ce6J0/w3GPUYOP+DPfXhJJQfiZS6NkSFxzUhVpUek3D5
0X8bK11UuPdTyt0jfhLk36yOmtdSwZkZ9q8NTYLOB1+boz+okDL6BRUsT4Lk
rtzy2HwqcEYbn9vFRgD7XIPcd5+poJbbKzMhQYDzCZujgjEMfntjJ5gVCcBe
FDipH0YFSSb7pnU1AuCTLoSQX1BBg9DjZfCQAA/HGuvAjgqnjkzZ1dkSQFpq
alXLhApcTAe611wJ4JLD9OaVNhXuD3Nf7X9HgCB3i5Dki4z79fK2u2siAWai
RMq9FagwdSPDiZxNgAS7aCYjRv/g993aVGggwE6RkAqDPVS4lpZTydZFgNZR
zeV9WxToqu+Myh0lgKbBO9XEaQpcqk5auL9IgPw51iaDTAqYtnBKnDiMgfui
PTffRwpkeuu9NJDEID90X+rrUArsSDpaeVMeg6nJZYFUGwp8KsgOe38Fg5Cp
rkpNAwoEWl+4P6uDwX92W2LpWhRI+c0V/VcPAyn28JYYSQosuvJPu1thQOby
7pI4QIHB30YXiPYY1HRRjzmxUOAhM0cM30sMAgk81uoEMkTm7uxvCsYgPPWE
cEs7GRYlB9i1IjBgV3Zs2FPB6NeBIuPhsRgEPEnya48mQ4dg0bJZKgbn2h2e
X/chwwPBkzG/szFgfqW4GfqEDFa7w900CzF45+LyUVOdDDU2Ut1nqjGoCpMI
aZIjwyqr95e+egxYLCXadx8iA895qqNCMwY9u5QO9jDmjeZXTZJCLwbHXbx3
GDDmkXGa7a++QQwacK/3peJIwHxgd4vyGGOu533MLsongZBih6QhAQPhlBrd
wI8kkH/6vPbiDAbSheSnh/1JED9SpTtFxODAvV7fl09IoIXzDlanYtB/nX37
Jz0SfDiZeMxqAQPdp/PmvkCCtPMcFK1fjHiwQoOa4yTgG7+Yi5YY+UZ7vNv2
k4BX65v3xh8M5B98O5P+jwiDgjXSTKsY+PQNkW4SiXDqUZlbyxoGHu+f/Gnu
IsLOoPSzhn8ZfLKG6rnLiWBt7axYuIGB2NGD5dLJRMg7RVDp/IeBSGjVRV7G
vBYz8hAs3MTgy/Gpsk4nIvhFlCcbbGHw3Fs2wtCYCIpJEylNDPwgekjmhzoR
Tluz/fzLwJ9141ZIJ4hQUHhW/zcDT/QVP6DyEuER/5WcAgbumFyqrPk3B47T
442nGPgYZ3KY9ewcqMx9cHZj+KtRjZSba5sD+zuzkQEMPl1jHHzKxXPA+477
110GX8OjxCyjT3PAvPemDWkdg5lgq/v6vnPwjyW3HxjxGlPuv5a0ngOHm0J7
DFcw0KetFrXfmINKaWfiWUa+Qs5uu6CtNAfbVqzVxhYxSG39EpNwaA6ilmNX
VX9iECr3SqZp+xyQ9nrN2cxjMNmeZt9CmoVdHv5kPQoGbGLZ3SmM/ehN2NLk
DsZ5mv4OzJqOm4WIw9Xi3yYxsJGJYtbymoXl1NOnk0cx0OSYUAk2n4WN49d/
GDHqZ8cvEa73J2fhGeF9/oEODAgcEe8s9s8CC5cc9QCj/nydj1Vyrs5AzFNl
mWFGff5O2uj7WzMDQzfcjJLLMFCsLss+nzoDFgJugtmM+rZX/rRmEDIDhFIH
b6dvGGwnVrXL35qB9AOsc9cSMVgl6Vyknp6BR9ShqgcfGPf5zJd1P/4ZECph
pxyLxMD8WOPJe5PTwG+tucrmi0FdLdHLz3YaRDfKT4z9h0GKIrfGFd1pKNmf
Mr2oj4HEVeAmyU3D8fYhlxZdDGK9Drwf+TMFTFF83JUqGNRuLoW5ek7BhfQp
sQxuDG50TeVvD8NAju3t28RiAuhmY5XvrTHINrXIyEojgOtQdjWXJga9rMvG
th8I8IUH40csGAyFjf3geEWAzD1xlrs8CHDa/vHZwfME0Fs4l4N6J2Dpz/3S
/RaTcOyG/CeDNxPw0/cUkGESNpn8Lw5qTsD8kxNsMgKTgLEJJrhVjcNpCrfW
etsEeBef8XmdOgbNr9QO1UhPgNqS+cyiwwhQFJTuyHaMgVWyFf9F6RGITT1T
sZo4BpsfPgx6zgyD2e1zfKcdxsAygzA7qzcMGc53Tm3nHoMzxjuK7FSGoLGR
pM6qMwozycRTz1gGQM1S+hNf5jCo3QvOqfjcDRmPyIG0jX746SFoq2/QDd9i
s3nZUD/EsQly7z3QDVXIXy7Pux8yZEedu8K7QLHwYfa77f0gWqj39e2/DpD8
0RXTzdQH4nNi3RMdLVCgZqfZTuyG3I8ROk7aLXD28XbS96/dgLOMczPBNcPa
1Nm3p4y74U2azb5rqAlCt6seInd1QXinV2lUCQ6mPvo+KbXshCsrJYdLS+pg
LG6v0KmWFqgSrxQpVa6D11FXW2ROtUDkp2taJ8trQclmJPjxp2boftgYGFJT
A5/u9vukWzcBMddmRDetChLdBDgC/jXCxVg6/3Gx78DKu6T7iKUWWJuFCiXX
EkF4UGYPl2MWGHPcLzneHw+zYZpX0pfSYT7MpHy8JA6kpHva/J+nAq7S8YZP
QBRUe+a/VHj6BR4eJH4nuHnAZfWPXqGXQmDfwHut8s236JrB3Jq7ZTza4Lno
vLPvHSJr+2fgm78gTt793o7JMUijfcgryiQZKS5e0n2u8Am1aJ6u7YvOQFL+
mmEiu5JRgNGbyCj/AjTVKT96zzQHvUzO9BPlqkSTifU925NyUXFZdkuOeRWq
hGfsQ2N56B7z23PxZdVo5M8Xk5WjBehE3rR+c34Niox1tKr0K0LX5q34Kwzr
0eIb6fn61VKkfE3Xvbm0CUnf+8eb512GbjxlHio1a0bcBiEv+Fl/IO5W7rDS
fS0ofCPhrsm+cnSZOadl6nEryimVupzDUYlkBofu5PF3oNRTef23axDSqQr6
ebyqG2mICk26H6pBj0MqDzsK9KDzpkrfZvRr0HTofzsKXHpQ3khxOL21Bjn+
l17BodCLhjmcpIkZtciHHlB/OK0P9dx9sa1nvBYVFnQ1LG/vR9EvuaU6uOrQ
rHbEfMWjflTEi9dZe1GHnP/o2e44OICQ4frCfqV6tKe+isc+dBDN7GHT8DWr
R3J9zroBc4Po189qSaaIeqTckXPYXW0IFXEpbByfq0d9VmZKu9eHkMArBb1T
QQ1omfba0f3xCPIQKFAUzGlArG/LXV/WjSBVhe+c3D0NSIa9/o3O4VHEfr6o
S+ZgI7pjk53j3DOKjHkuyvHHNyLepknxpHPjaHmPgM/L8kbUzuPBqxA9jm6V
3nKnDDaisa6p9Lfz46h9OE5iYx8OpVfY+mcnTqDXy5rnE6RwSJ1P7uzj1QlE
Tw5v1r2CQx/usllQbk6iifk6nRknHNo9x7L1hYmAUuNv9zSF4RDsfzIfIkNA
bJMF5OokHBLq42S9e5+A6gYcj2AtOCTFFiUbkkdArn/klzkmcChFVnxtcYSA
TiS/wOn8xKH3NYZmKjsxJLvn7AorNx7pNbpGWRhhiIMnQMHvCB6dfqXOdzUI
Q/fK5oX2y+ERR9jr0u2FGPobh1csu4BH/MX6fR/HMMTnKPnHURuPHDrEOzhY
p1DPv4nJy3qM97uRdhjKTzF4vfSQNsGj/lbOcR/DKXTy6DkDKVs8qlwNKvEJ
mEKrZrysqk54tLD5/deDvCkUOZx/0N4dj35eD/69e3gKxYk+lCnzw6NUS5sj
kdunUft7vomDoXh0Jfj22IL0NCr86N4T8xaP+DRQiOi9aeQx2l4gE41H2+Qq
3kh7TqP7zuRjk7F41Gk2eXN3+jRaYtYg53zEoxPyekoVndMoNmEpIy4ej3S+
jadeWp1GB6fee31IwCP7CfNjtMMz6GZRTlUPA98L86Q8uzyD2HJ4tmsxMMtv
zL7VagbN3eOj//2ERx2i1Zc2w2dQyoadFC0Oj178qJhkLZpB9kGKxgIM/wFV
m73EwRlkqrh8KigKj9pNj6UkbMygxVvvH55i8Jfruz947MgsGhoxjBBmxFe+
LvcnWH0WrfCRvK7749Fbtb6AKutZ1Hj0NLHcA4+MHlK4cOGzaMYh3M/2BR6l
7UoS/Vowi65JveN99BSPLtbnqN7qn0VNn0+YvLdg2Iu+sdazOovob1XVe28x
/L3b9fA6zKEE1l/OI1fx6NQvI9HLpnOo531CxDEVPFI715DDFjCHuitXBuMZ
9XBCzEeXrWUOXWLN/d6wH49uVqR4qdLmUFabzbTSDjw6EuqWp7GXiIZ4l3P+
zeLQCs9DLXSLiJpbhPju9uNQ5A2mPtnnRLTxa818tR6HbHf5fH4STUTlPAWP
Tybi0Dk6j8qNASKSe3q83kYHh57tHs35rE9Cqo8ElrWVGfXb56T7xIWEiv6r
6PAWwaETPm87d8SSUFyTZ+ivn41IOEOo610/Ce1JyfU5OdSIvjsUegX+JiH/
ucSrjdWN6GPrLnu1/WRU3VjhwxLaiNa2ht24bpKRjPYOsbynjYhHZmer2FMy
wu+/Qiq93YgqgwzwG2FkdJ6DcIfE34hq31Urb8OTkbDiCa+ZhAZUa6asoXWO
gv5WL/5N9GhAzgVWlwP1KOjmb9eOOqMG9MvbaTbQkYIuxlRcunywAVWFXkrr
zqQgtUtGXrfC6tHzUm4eP14qejhTV2ltWY8MDsqd6pWlopC8eqmlS/WoxrFG
dEaLiupD2kse/q5DNmpJfBoeVDSUrTFWebcOJTqSWXZhVBQtotx0R6YOnTod
Hz66SkXCun2etsx1aODhxMAzThr6cN7aXDS/FjVEuLkPX6QhosP6yR7mWiQ6
JbKe8YGGPGIee0UN1iDRvQuP3XJpaPzGBSZCVg1qX6rWYWugobSfOVThmzUo
YO6JnfkCDTEJpnvWSSGUJ8sUuQ7ziDV7s+RyazUq6bh0t+zOPLp5U5Prl001
Mo5bd1N4PI/sTuIejKZXoVuDz1YNwucROVV84zx/JRKWZWd7MTCP3j6eZn5a
WIEa4yfPcpLmUUYWTy92rQJxMQcvmK/No962Fb0E93LU0WzKekFwAXmzlQeX
9Jch8s6UfV8NFxDvQ5yWrk0Zap6xdWWzXUAidzcvqG6WIp0rf6ul3RbQga+T
2aripWhWv1b0Q+wCqprtSmGyLkHBXo/F93cuoFxWwaXq1WJ0/ljO3QtjC8hB
+8NbelAxSgzA/xYiL6ASPiV6UUoR6j6IJli30xHBKMlGeKgA7cWtsdjJ0VG7
gbUKzqwAjfM23tdRoaOqbnH21YV89HDXMGlGnY6kdJIldrPkI/kHWYpKBnRE
Vld/Mi6Yh6K1U/LpZnR06yDx0+DJXGT4+7+Zh0/o6PWXHCPH29+QXhhxw9iL
jszdCO+EzbLR3ntP0ueD6KjveoIw7/Ms5GF+8r1CBB1xykylLUZkIP/EMwOj
iXSkeum7MfFzOjJXbPkN6XQk4Pti+sK3NKT/+dji/Vw6apBv/HW8MQXVRF47
mVlBR1FOdvpMlcmIy9mc1byOjoottO6qFH5FoiLrO3FNdDTQ6iE8nZ6EZuVK
eDo76EiGn3VpK/4LoitFHvTqo6OLa1J8p8US0dkD41v9w3Q0TW68+Zw9AUmZ
qxT1TtDRy66KhbvDH5Cp8EOleiId8TB7WvKj98hDnGOmmEpHHJakPcdTopGo
QYqADp2Obv5kco4NfodMXz5pC1uko7y5pdNOdhHIIpl13v4PHR0c8G1NTHyN
XN4/dthYoaPP6/3qLyyC0cvxwRsn1+noHabKEy7lj3zWVr12btDRCzNEZZvw
Qo0Btev+/+jodn7pg22WLqjjnmd55iYd/dx+ecVr5AmihfeUO23R0Z5De14e
7XqAaCWlq7MMrG5T6rYldQn4cB6O/xhYU1uj3PGfOdicbJWsYOAn160Na1Yc
4dBQ/EHh/+HvrEYK9q/A4MhV7eMM+w/DMOu5JR+412tfNczg8/g+PkFCNhB8
uQ+7yv2lox8/qMFl1qFwUivJ+8QaHTlcIM67Jb+Bq3uyJrqW6Uhl/JuWxNNI
eLJ+9pPAbzraXqohujM0Ch7EZNaw/aIjPub91tdTY8CaN90gaZ6OmFruh5BQ
LIQqK72YINNRb17+r+bhODDdkX+kbpaOxG7e5iEsfgJcbJ3ddYyONoMfPxZg
/wx2vfZWHmN0hD3IUzjN9QXWhLkl7w3S0Q2LzzijQ0lw7eDtyt5uhv1Kl4JN
ia9wSEXuwlorHWkEd5ZyyScDMXALNTbSkcWTO8o2l1Nhdt1I+m4ZHV2ukNJM
vJYG0ZqyGgcK6Oh70LEU8TvpoC7r1uqVSUfeDx9Ebj3KhLp1f1+tODqyu+nX
f8UiCzzu8ixlMupbr4C79Yd1NvyTLNcoZNQ/m2+JIbd9DvhO35WscGLUo//h
llmHXDiyGbVeYUNHSWkzEU2OeZBe665m8R8drdVdZeooy4cGY4XOAm06Y3/k
vVWtXADMuHzLe0BHNt1/rkp8L4CJqHP8X0/REbPOZWWdgkKw1NvloSxIR2Ff
4TLLySLo4rgR7r2XUe+CMXxiWUVgdyTV4fk2OtolYmcU/KUYmDk+eOrPLaA8
i8URv4Dv0BzsYC30bQGxZEoWcP35Dof5Lm3HJSwgz19BAkzmpcCqrMkm/pbR
Xw7/UFiEMji7a1qKxWEBvfDxJ/fRf4ByOoeygfwCOkaTLeU0KIfDRW2t5SIL
qEjK2i26vhyO2s0+6d23gPor+1sfR1eA3QFC+Yn5eTSoc6qULFMFeryvul6n
zKOGjadnuCKrIJKLXbQ4ch71tIoNW/2ugpEMaYMYz3kkdGq4g6EbYDCO+CpQ
fx4JlrbqmwnWwP7I9+lSO+fRra7Th/Zp1wB7VabWsV80ZG/P/0LDtQasWKdm
sFEa6qNZ3brfWwNs3Nkiofk0FH9Zm9TrVws/5/ZFfdejoacpvOFVubVgk5wy
/gloaM+WU8ux4VpQ2W1qC8doKIL9fpmnTB2YP3oQUMeYX7dGrDyY2+ugxNrp
bu17KuL6lP27b6kOjttl30lizL8U6p7IwwL1cCDTkFfNnIo0bzdK7bOoh/J/
YrJ4OSrKajm8/dbvepD5qcNFxlGQrd7FwrIDDXBtPvv5UDYFBcrsyAw/0wDM
eu3aYREU1MpNy3RzawCZm/zo/AMKepivcvnSSgPc8xhCQ0QyOjqqa/KLpxFM
rVnq51vIqJHuF7RToRGqd5Qcbs4ho+xDvZ73bRrB5GT//T5HMpLPKStw722E
mW9jQRrrJCSQ4MysstAIz2KK15iHSchowHBGeRcOPnlx3/QuJaFnAZdFSWdx
cImNOa/8OQnxBJn9/HALB1iVbOXLWyT07t2KrJ8VDkgS3KXrJ0no5oPnXFtR
ONg/sivkCpmIJLasrrzJwMH1tkHbvTgiuvj+L9vtShxsO9V+J/4rEYkE05Mc
MRzonD14d6chEVlrC4u3L+LAiWW717QSERVeiUnQZ8ZDPE2uL5CbiIwVMNbV
I3hYNoyVFm2eQ3+8OdrY5fBgnTV/VTBlDjnHnjl57QIeKofrqsc855DNWKlo
iRYe5kQTjzx+MIeIcrJfNe/hYfNW12b5qTlU9/59Jst/eDhz7/HcEMccOlQH
50jWeHBqUrSuJc6iL+9HHyw64oHi0crvXDuLmCK8uEVf4UGH2Sno98dZ1Mub
7fjCFw8nxE9rXnKaRWbl18MXgvFAs8Iv3NeZRThz/MuQNwz/7xL2gcQsIlis
3LkahYcU3iFY2pxBx12Vz4vH4qHntQbvC8b+bZ5loS/6EQ9fZa0lmvJmEHaa
1AHxeFBWNWejBM0g/7OFXa8S8HDak/XB2CPGvv9U820/AwcG4bISlWfQ9oJG
1esM/Ea79MPpfTPob/Ck2OQnRv4s31Z+mptGhHCKc3gcHsreJuX3V02j+MoJ
d733eOhbGNk3HT2NmosNfc++w0OYV41zg+00Mid861MMx4OtrZ2nmxoDB7Tj
tIPwkGgahttxcBpJ1trlu3jjwWTxAdWSPoUGn/yar3DFw4HhpNDPjVPo0C8P
wgF7PMzql6rlfJpCpN9L80GWeHji+6IwymEKPdq96r3XiBF/2KWXtzWmUKHc
n11ZN/EgwL2mRDk0hdySXrUfVsbDg0E4mI7HEOobZvpzDA8q9F3e7fEY4n6M
HZg8iIfuKjnTTgcMKTVXcFBWcdDeflzUShBD5j8O7mEj4uDL31F1pp8EVMB2
4ZhKHw7o8pn2LxoIyNQrQqozm1GfTb9tt+wIKGzvw3vy73GQUZ4UsF+VgMYm
5CSTvXDQol57ZhcvAXG0nfEqvoGDzakCZpmXkyiAVH8zcKYRbvA3f8nimUDz
z5xfk/CNUPWgYCOlchx9N/ZTNslqhJK7tAE783HU+4eqGmPXCBuVIlvWRWPo
y2v9FZa5BnD1XNh54cYociT8NOKra4D7oWzncH9G0DE9URdIaIAFz0WSRPwI
6iRYNXTdZLxf5W3Nc9IwSkjpT139Vg9cQWUxD72GGP19xPGHTz1wpF+dxokP
Ic6lk+YR9+pBL0WklrNlELUF+17xWa8D7GPweV2eQbQ1vWvl+dk6WDgU9DUq
vR9xst3R6wurAeHrO9bMWnqQ1uBzDu7bNfA1Whs8nvYgaRFJbRu+GjAzWXrw
mrsHGUtHCA9dRCB0TfNQpEE32lGqQ/DTqgJzR0un/L5OdPfTRNxDth/wAZtw
Wdjfgphbr3amupVBVMqiAZtRM0rY+HHwNLkU6DfkpM+lNKEPmfL50rXfwZ1t
T9jkaTzycnI9UWBUDJ1FJYOB+g1IcHf+cbagXDAZ+4ERNKvQ80vNuzm1cuAo
b9FVg+UKlDlZ1Km+6xuwndT1OZdSjqS7Gv7oeGbCcQnzI7CtDE1diMdOaKWA
kuz8cVxNIbq7etfEu/wdkEzf6OsXfkGKOxPrQzrfwulJs22vVeLRn5fS8mXC
oXDDy/3VOk8sUmppuR2m5gHPdCje4Ykh6KS3xXfhLAf0JFExjMPCE2xz8tbO
tcWj4Nxzn4No6VDZ85zSO5+ItgZVRQ5ZZ0Esd4E2a2gS2v42y39p+hv8vinv
e6Q0BVF/vLKTpOTDB1Fjs+sy2Sizpd/QrbMEik+fm94DxSginJ7HZItgdFq7
JkaiFh3qXXO6SmwCOze2jIyUWqRXvjv7kk8zWOwyY1MWq0NRosY1bgItYJKp
+Lr6SD06O5/Gl67dChNL9auq4o1ot4eSYk5SO8QKpocZXWhGv6QqifY83SBx
jv3gubpmFPvMwHCbYTc09+iwPtdoQVMjsdViSd0gJHEnaeF2K+qqrhQQlOmB
47HpHt1P2lHOnNO+6vO9IG51c7RgqAvlVegeldbshyPJRzVeHe5Gp/56XvcM
6odFz1fcJqbdSJLN1VUf1w9/K67qetC6kU7dW/k4tQHI6QvoG9rWi8o8Jqga
ioOQ/fj5/sNy/agvlV2pafswXFC98K/83TBqxAr4PM+NAVp9NyfVN4wulLZm
3rMcA/0KP5ko3hE0lJSqWhw5BkJ9QyTNDyPoonSy7g7iGPxTzO8+kTCKSq8V
jS2EjcPz/SLa21PGkXu99q606gngcTxT5TszjnxlMvrapyYA/4x/lio+gYzG
uUtcd06CqaSnpVPqBIrf4l/Tuz4JKvety9RSJxGNWkOV65kEl3ChcPdOAuLe
8WfmsBkBkqm4z/gFAlqQeh+r6kCAxkBlpS0ODGk8X+s56kWAKyHiLArXMXSW
WNUo+5EAq97+fh8Yfc6hL/+fZjsBWGu3jp+bw5BcyY7b9sMEUPyo79zAMoUe
r7Sz358lAP/AWY5I1Snkou6db7VBAO6s8Y6NH1PIp3jf+htJDJidjhwbGJxC
O9eGcn/IYzDcUnoz+s8Uuk5vnE5RwSB74NrxKrlplFFVNF+pi8FO0YtlRanT
SMJZMea3AwbmTWnaaXXT6FxBsb64Gwbo2K65l5PTSOd6xCKPLwY67aMP6vhn
EN+FOPqZSAzaE1WUWkNmkOrzTHr4Nwz4A6pYOTJmUID/6/eaRRhwoB0CErgZ
dG9XFf7HDwy0aPm5o9tmUYS8OtQ0YuAtcG63i/AssruxVH+vFYM6v9G7xPOz
yFDy442vXf/7XcPV+YrLLDp67d1OkxEMmB6NSMhFz6KTMo5uvRMY/Dst4buQ
P4vuHLQM/DeFwcFvq8ue7bPow+fJW5NzGBi2+v0hkGcRPuXdjpcUDMiZkQv7
d86hX/ZOrS3zGND3B93hE51DNz6Xd/T9xKBNxvI95cIcOsM9ohK7xIhnX/fx
cMYeEUoJuMS9jEGu9R6fTac5pGaZy351FQNlge2cFyPmkEuTV7vCOgY8jZev
XcueQwWKJqVDfzG4bMORcRTH+HzY0l/lfxiMrmjEtxHmUIcCZ+fNTQzuD4d9
hr9zaIaKtxDbwuCIv5iEJy8RtcSYLOcx8Nlte7ODZBl7Ev1+2fL/fg98vi3N
UIuIXO8Yz6wwcF/8k4g1UyLqeXqzuIiBvQ09Z/5zJyLDX1fMpBg4XUrocGQM
Ebmc9ThhxPC389NqSUguEbGvW9/UYvDRanGX1sYTkdRoBtsig+/Xgcn17kki
0uRljtdjxGN/Q/iryCoRnWW1U3dhxHv2K/MXRU4SqsFtad5l5MPKX9SJ8xgJ
zWVvo8wz8pX4APucDyS0b3DE7sovDCzfuyTx6pNQQwE/3/0FDBKEf/27+JSE
zGxsZY9TMeBOk1OWCSAhL5uUf6VEDPJftN24WUhCwYXZhH0EDFbEFc8GNpHQ
/qHi0OFRDLyUfPZ7TpCQX/MBXtNBDMaVSRbKv0nIQE++PbOHYd8gsKxgNxlx
zr7aVtCOwdz3h9E0ITLaj/Pb5tqEgXCIsR/xFBnRfSiHt+owUH8tgBc0JiMb
l5Il3VIMvk3cPn3XgYwM7xXe4S/AQFUra1Y7gIx2dKscTs7CwKGE/6bDNzLK
csxX34zHwC9F+/gXREaPOt/e6YzBYLWhPzCsh4zCwwjHzN5gUKyzdvD9Chkx
ja2+6/PEIOhWpEvxbgpi9+6fKHyBwefhgMxwQQrK69H6795TDDzMsmafXqSg
qgA2D5IRBoEw9ALzpiCdqrrkW8qM+ytUkOTD0AlxPEu7wk5gcLLtIedYIgUZ
/tT8ES6GwbmOBu3qKgr65Elw/7kXg3CpVhP1NgraZr55+xYLBho16ncCRiho
y2B5zX2NAHmhbo9PLlPQlWd6WkrTBODJqx5/z0xFMannKhoGCTAi/qb/OycV
nZOajxBuI0D/YYcNQSkqKpcKZj5fTABevL264wMqQvqzzwV9CRDIGPzhDB0E
B0l2/M4EeF3M9urhMyo6kmzKO/uYAKdT2yMO+1NRxEj/Mfp1Ary62e3C/oaK
ToemPzsBBFCrNjufE0tFi7WfD1+QJ4CBsIE6exYVfcixf9rDQ4AbuuJM+EIq
cqNXLt7fSYD/DK8HKFZQ0cIvATUL+iTYV+0lHW9l8PXeCqsrYvTnFUX1vB4q
Yklpvfo0ZhKW9AZt54ap6F1txs/6F5Mw3WtxxJpIRQERaeX2ZybB887Js8Xz
VOTB87iwmX8SLLmlZPKXqEhc4plm1+oEFBaX1RqtMexXR9oGDE3ArlfWdT82
qWgfawc7pXQCqg03VnDMNCRRpy2w9X4Ceg6YnfDfRUO/M26FNDpPQP5/js0c
XDSUOVKqb6MwASptTG3DPDSUHy2bpM05ASWdcjvv8dOQ9dp9YcL8OGyL3tD0
EqShmS9zzdKt41DC997yvhANsWxGxp3MGIclISsFgggNuSUeCCb7j8PqYT6f
A2I0FG53IsLYZBy8hHyP/RWnocLxoJywC+OAT6zfCpegIVn51jGng+PwyEFh
skOShko/hQkK/BmD5GDTL1UMHazkrGHl3jUGE11HhQyO01CLiWldfPYYiC+/
Pp3CwIIuIlLugWPQJkWq+cTAa8ZJXwRNxuA1EZ90iYH97Ecl3VXG4HTav+/v
GPbY+9/XfeYdA87YeCyS4U83xsrJnz4KIzfXmS8y+KQX5qiebB6Fy6/ytsUy
+C4rBcomfB2FvU4fULwoDYWodV3ueTUKdQv9YjcY8f48IBbQcXcUCG/aeXMP
M/wLtay/OzEK2e5Snj8EGHyX0DeRnaNg+3v8qgMfDd15lJnsOjEC17qEDfv3
09Beoy7Sp+8j8EZlx4w0Jw3FfNmjdSFyBD4W/nh+dg8Nre7oeV1oOwJyKnwO
LxnnaZiWJ3pIZARa/ltszGac9/y+Yknu9WFourPtZzSjHl72cb+Y7B0GvN1g
fNgCA7sefMAcNAyLhz7vjSNRkQ5na7Lhf8OwT/rDKeMpKoq8Op385uww2EmT
vXb3U5EkVeh0MHUI5swvfP/1nYpaDKqLMR0GnmC+UZxLRSJ28k2SEkNwrZA1
8EQaFQ0LX3C9sTkIXd5rA5ejqWjHTXcJjdxB0K7d5cz0hIr81uY5f+4ZhHPf
Hli7mlJReFa/keHMAOgkEo+m61PREj35XF7FANwIchQ+rkpFP5vPHOexGQB4
6GxSw7jvhR2hl6mN/fCIa22czugH7Ys8b4vi+2HkYEPYAKNfVGx8s7J93g+x
NZZ1zaMUFKz39kqOSD+IvNdv1PpKQeVe09zv3PrAZ9+3hdNRFHQ0K0aNfrMP
xJ4r/Rr0Y/Qfbq4NNck+oL/0IKmbU9C3K2+Cu3t7YXbmv5SGIxTEmuBlnizT
C/8N8MU4cFLQWxa+S+3be+E2+wv1wU0yOsIbGPd7qAcyHnfZtI+QUbSGwHkI
6IGnJ+JSrd6SkXNHq93YeDdsBAstuFNJyDrrGbb8tgsOtcWa/OwloeG3wfhJ
0y7IVrmyb38lCd0ZOkPrV+yCcb9fXI/DSCjv+OFXY6WdEJhAaL4pQUKZfzMn
h291gOXCyYnHOkR01fXITeE3reBQm1KzIEdEOVfPdcUqtYKV+s87x3mIKH/z
u8/1yRYgu7wcKB+eQ4n75LIc5Vtg2/fvkfdN5tCaAvaXMtQEAjV2O9tNZ5Hi
Nnu+60oM3bopyFWmOotC76icfDndCNG+/h5GIrPo4jxBfXtkI7CYZXP2js0g
A2EbAbn5BrjO9v257+0Z1JZsqCKbVQ+v3hraaspPo5fZ6WkPztTC8fo2g7/s
0+hrwn9GErQaiJSu8n46N4W0PnKa232pAX2uAu3Yj1PotXn4fVu2GuB3O8DG
xDSFHDf4zJubqkD8cBzPJ0RAqW2vFx3NfsCVy87SV+MIaNJPV7pmpgw4PfLc
ahwJyCHkVfDex2Xg6fXmhfhRAtr3Z+fXsqelUFdm/dN23yRKVTWpCgwtgey4
ron64DGUE7AWK7hcABwigYI2SmNoEYkvxAUXgEdfKnPV9CjKdj6WevFQAVy9
axJhd2EUVcar/GDWyIfU26q/98wPo+6WYx5P7uWAluKjW8cvDqJoeZzOxv10
OMc7bLuHOIBuBnx5kZWSBi91fn3MfjuATB5ewqYXU2HB6qmiKKEfabqXPtwZ
mwKfZJQD9nj2ofNXSDesNpPAfpfZY5p4H1JY3q3c+TAJ7gsxP49o7UUa32Y7
Rmu/AMmx88hx/l5UocT0fkY4EYJv/mr+kduNWipzpTs+fIQ5ZdaJwTvdKKz3
FnOCfxzgcgiWdatdiO+arOms8wdwNeVm36bWhepus6MVq/fQSY80909pR922
TKL5ke/A0VVqtY7ahnTUxI4MZ0aCmmiHdbZCG3Jixma+4iMgWmeHmy9qQbhT
NwPuHnsD06wiUQH9eDR659D3takgOFMacvTfYTxSUeBZdHEOBKl/4u4Kljik
SnhntGN/AGQIOGZN/GlAj/YpcFs984X8YxGfH1xoQKJU++3aJ33Asy/z7Uf/
euSw6D2Q8dMLthQ+ZL3grkMT5601lgxfwYmjp1d4H9Si1O0igxdPvYTN79cC
/RJrUJr8qzOsR1xgid3QMVm/Gpm8Yc5TvPQcZJzM2Z5MV6KthOv3ch0cYKtf
vmn6aQXq9NSdiHz+DMK8Z0zJ/mUo/vbzhV2HrIG+ejvOe18pkp8SO2p92hKI
QW4Z/XEliDtxa1nLzQzED/ggmlgx4j5aZF82/x8YTVnsbckpRFaffUN8DhvD
7t7FRgflArTXJuX9WPl9MAsylO3yyUP3jrOzxBbdBdLnKFvT6G+oQy+Sr4H1
FnApyqd9TctE+1er6ihPr8GY8op6XFkaStK66uIcoA67KrMKdVuSUeGNjOgr
dy5BgN+fu62jX9C84SgVy1cG+q5IGdmRT4iqU8glIiUHoy3utS4bMahrQ1Wp
U1wc9vz8e8FHKAJV6CYV6qXzgtGA488yb3/0fOGaE4v/NvDp3n3IOtgBafAe
EqQmDF9k6tEkatTrw4tdQ5elgtIvqlyTYd6w9oCXdVwZj3YuXkTcj7qtHEIh
X21nWLsoB2z9JzBZfyAKrB/l47QfCkGweEh4/O8PcKD/6ImNpeNQ5X/284me
z0Cv7RfybT0FxnIKQkX6X8HnzIkTm+znwdjmfIvA1VToD7I0Tx1Xg+OfpW3U
T2fADZNtnfF2mpDKj4uREs2GY/0uqKVQFwRqG2dr9+XC3Sy+uF1Dt8G1Zf2l
j2c+ROjnGEoW6oFSeHrO4u8CSD1dczaPaACBRHYjOdsi+GbFyvna9REcfHPI
gkn/O1xPFcb/6TcHnsSuR6FtpXDy2NMiofTH8EramrdL9QeUnJu9XptqAy8u
nvvrIV0JuiL8OfEx9tA2/KdnPLEKCoO7W1fuOwKr0Y9i0n4Exm0boT8VnKD9
y5Sry78a6Pr5ni1WyhVs9/zc/Pm9FnSmzNvkNd1A/tlUubJ9HagdzZO/4u4O
LZ8rX4tP1cOvRu7knihvyKu+26Zaj4M6NmN99sYA+KholeoRiofGT4e4JK8H
gbF6iJDNrSZwSnU4oEYIBqGmkz7aE83g00ESvC37GpQ5l9UJS23Q8ufwA2JR
JJA4K+7eL2sH6Ytt3+ez3sHcQJGmnXsHsPteOXQ9Iwru/8M6c7d1wYIUj+d6
SQzMldJv7wvsBgnvzUuuhz6CgqiJcuxcNxQVynl+VP8EcboxM1NXe4BHcFpk
xikeeB/8iqnZ2Qu8Kv+l9Mx+hjX/ImdHvz4IdbKUldn1FZ5f6y2LfzYIBD2D
pB816ZCve3W5rXUQxgsE59r9M0BggvtJjuQQaCWInSi7lgl8/H7X3SaGwHFK
c/c/LAvCTS/sENMcgVOR9UZNsrmgIiyiXJw0AtGcD0I52PLA23PgJm19BKh8
k8nMxDwQ832Sc/3bKOiSztq79OVDpsvll7ls46DOlbp1MK0QCIJjOvqMvdQP
71b143ARiMUZ8HwuHYfuYMKThPdFsNdW7eA2swlQ33+k7+jrYvDJsmzbLJ5k
7G0m9+cDvkOlo6TOC1GGLhcnRvYVlMPIDxy1UwMD/yOuiPdUBVxL0YxbscPg
seNSrmZJBfRwSwflfceAwpka/7KyEkzkwpK+a0xBmqvBIdRfDRrCn1paH03D
cdXu/XUfakG3vb5z0GcaLpv9cbtNqAWDBsHu7ORpYP0gCFeP1UFu2+GHWXPT
MLoz58TtH3XA3L02u2I9A5VvPur3TtaDvuqCU4jFLKTzmtTJX8DB9WA1R5rf
LPw5w/9XMxQHc/E2ItxfZ+GTRQuWPYiDefT0Qcr4LJjMZoTqPseDVQP1z+it
Oeg8W5M8mtME0osFDvdPEuESvuRG4clWuGq0+2+9JhGG2o964r1aoabLsn7e
lAjP5r2n9na3QuH1rf2v3hPBPtS6/IRTG/DKeP11XidCNMcRQ4/KdkibHxMr
LyEBzeHP2vLxLli0v3IA306CEn9pHln9LkgZf53oO0uCvwquPU7+XUCU0PVh
4SHD2s3P4+KTXSBIi+U98YQMUnQd99XobmA/MKyV4UuGHVP72bzquiFSM/56
VywZHIscHNh+dsMzi7HFo7VkeDWNM5a+1gPNllK+U/so8OPGxdAX23pBroQJ
qxalADEmvZFFthdaDhE+XVWkQEBR8q83Rr1g2KsRqP+AAgIOwl/elfZCqJGg
0KsECljV/iYrP+kDfVeeK7k5FDhyjBMCP/ZB+LuGrLAqCpzXEQ3G4/vA+G8x
7soYBfjV7J2ERPuh6NNvoxxeKmR7vhbf7O+H4kdiybJiVGCt1wlp2D4AB/6r
sjSUo8Jfo8kxJ9kB4I7oEMrTokJEB2p/EzwAbh4nvqm7UiFWT0Uz+OwgeH7u
OMHtRwXhKbEYT4tB+NXLXRcUTmX0Va2Oe5GDwPXGgfVpEhVCNWWDvpIG4WPP
6xiJRioIjXLkxcQMwfaoWAWVdiqY0WVWn9cMwX4Lwa7VPirMF2aekWLogcLh
ysPPpqnQ+wInLXBpGAYjZoYlKVTQpr1IvWUzDHU/P+SG/KTCOEtBilH0MOQl
YE2aG1TIj1rEkYjDUO/mezRtGw1MfvQVP+YagUbjpqZvO2kgN8ZUXXJuBChm
6bVG7DSwcoPmbrMR+MrqKPJ9Hw3ONM9Xlb8egfTMoeWy/TTwkWL2f1YyAvw8
ZH0LPhpYfjnAQh8fAdcVjvsVAjRQu2gueYaht2JM9nJUHKbBrtieQa2To9D1
PmvqvggNMhzuaFrfGwX9h10/kkVpsDf5mtIt91HoTqFmfRKnQfFEVDxT8ig8
asjsvCRBg/MipS9eMPSgNm1VLUqSBsrvVmoKGHoxwY/1SNQxRjyOd1wLGHpy
T+DlIIbehC+LIR+dGHqzZ/RBNEOPwkE+EYn1/8aA5ZuiFUOvwlaEhYAqQ6/+
yNwSM2Rgi/cvXTQZerbN8DAFMewVfb9xcR9D7z54JDfRw/D3MbvYPvr3GOxP
5T0azeBTKHGHa5B/HLgyZ2aYj9LA4VOZ2MD5cShLXbgiKsbgv8PgW8R/48Be
W/WEzoj3/LcP+TsYepxPkSfEVogGNZM4pdPp40BxpNa+F6RBZ4nMVcGWcQi6
9PyKAz8NGtAe4g/aOLzr5rz4l4cG7VUZovv2TQBxxHj8NBfjdZ2rzALyE7A9
SfK2EAcN8mJORQ/fngCdF6Y+21ho8Mjefc0xZgKaDzxO+rtJBcGKJrL29wno
fsthmrZGBS7zG3W9AxNQfPDA2rbfVGD50hG1Z2UCtlk9Tdi7QIXrHcfsfx+Y
BJdouaA2IhVCmK1tQpUmYZ3lK10Fo8K7t/j37fcmwYDVTVKulwrnearH9KMm
obPg7LOSVirUX+4WTyiYhA63+xLz9VS4LLJ9I6xzEv7asBGciqhAy7xgIr+D
AM5houaNWVQoiTrhnLKfACaQZNDMuB8gqxlCOUKAZYJ2Lu0NFZ7ZDv+av0CA
mo7NmD0BDP5D9MdZ1wig9+3YDsyNCm8HnI6ceUCAJ6eOfsqwoAIPX05m43MC
vOblaCtXpkKYi8jlhDQC+EstcQRJUyGYSYhlqJAAOsyySmzCVLCiSxUQqgnA
ccrbQ2kHFYwSfssbDBDg95CYKmGFAiPXps60YAQI6lA6rUahAO959Xc75wlg
6HD+n2wHo38leWZPbcdg7AubdyWiwMzQVIoPBwae9L9h2wsosPB91IzKh4H2
jpMple8oUB2Rm3tYBoOnPHxdi7cpoCdPYF+6hcFaFNbvfJkCbmfwC+oGGLhq
yO6pPkUBCa661cemGPyi7FFP3E8BDouzxvyOGOytb5w7w0wB0VO7JdNeYoA/
cGvlwyIZAlZjlrf5YEAXZcrO6SLDAI43XPQtYy4e+r1oisjgdWC8aS4Gg9YX
95cmc8hwRm/Pb5d4DF6VZDxVCCUDv91uNqZMDPL/m4ra5UoGf7k7z5ZzMaBq
HsWlW5DBnW+rrKwYgz7dqhy1S2R4s+/xciLCwCCtkBtOkCGQx86moQEDPsrC
9A4BMtSYPa4vasbAYYngFruTDORovfonHRiQ1j/K/14kgdGrZZnFHgzST3Sb
Hpokwa3zDfWXBhn2Lw1Zc7aSQNp089qDUQwUyI3Wxl9JwPmflzpxCoP2z7aH
SsNJ8LZt/2WjOQyyXhvzT7iSwHi4QPsjGYM/pv8qesxIMIR/Kp5Ew2Dm8xXL
GF0StDtLxtnTGf721r+QOEsCSyMfx12LGEjeSdAJFCMB92uqm9VvDDofhV0r
4SBBaGqiR8QyBqqrA91FK0TAdX696r2KAU3aQM0XIwIxC/dVeR2DtE6PLZFW
Ighfynr0/S8GOn+U7SKKiRCwUH5tYwMDHxM2WlcCEWh3FZV2bzLqYYtpeiqQ
CCFnJOhjDDx2K78E94wIb6xsNVy2GOc1c6rZ/T4RMj4Xcw4xcEWZjN8OVSLY
Gfkf3tr63/+jkJbJcSL4N8qp0hhYclu0XwQXkXGuMzcS/4fDumOj1uZAySBR
iH/rf983Cy/YYHPw2kXZT4/h7/1A0sKB5jlgr3tw1+AfBt3ea9s+5M9B7lSo
tRiD79ONS5ELsXNwe0vyUwEjPo1P7DsFveYgwfNxHcsaBsJFZi2HLeegounB
j0MrjPNZb9JcuT4HZSwUgzVG/o5PnaSln5qDrJ4J34+M/Eb+WheWE5iDd9tH
OZh+YvBDkPlmBNMcbGk8HD4+jwEr32tS09ws3KM01vNRMJA9emdnY+EsDN3c
9xymMeC0UrQM+TALYmE71lwnMbD2HJ/+v4qtO57K/4uHqFBGUilakkJS0Xb4
ZkZLZWYlK1R2lIxsKZGZWUQhysrqmPea2Xvda3Mv10iyf/f35/v1eZ5zzud9
9uv1PMdejsCwButBB3p8NKtdmPujNALvrm7vK6DHkzl/hYHgyRHgMxC6xEiP
t38WmCK+cwS6znvVsNPj0eljr2dP7zDQBLfttvhF5/OTWpoIDgPZwl9U9idd
/zqf5Z2EYWhcXFdu+E6G1UCFRRHjYbht5yW2M5EMEoSjwlyUIWD5urdZyosM
N/4MLIvVDQGrbqxWzQsy8G6t+yuUPgS3tnGJ7LKj5xtjdEHG4yEIkwt72GhI
htD+unzRmUE4OlPv3XOBDDoPaXyXGgch+HX8l2PiZEjZ53TzROYg7G1eTzkh
SAZRoYtv0p8MAsx1Ctyj1xc1JtZ5DTpv/5jWNC/1kiDicVlu6RAJPlbZ1qla
kmDXr10hgmUkSDYqqWXWJUGRVVm9dTwJBKZ1y+yvk2CtP5VYf58EP5RvVDuL
kWD+0vnHF74MQPhbcbJk6wAYx6aLX/boAwvzoAn/1H5w+/qhuZ/e5z5sbFyb
etUPSWmNQeaLvXDF+OLDEp1+SJX57/xly17YYqtbk7+tH7ZY0vj/3e2BfpX8
awz6ffC9JJ2160gXPBRy/HiC3r833z/59tJgJ1Rck9q/XNoDSkfeMEXFd4KZ
ppTu7fc94JM+GX+Dnz4XxRwIjjjXAz1CL/q/83ZAIVtAccizblgMtP1ynrUN
trEEzAcPd8IH+xrp31WtIDYWkcmW2QmHtaknnvi0gsiWKQ/u550g7f2nsX1z
K8StxV6q4+gE2ZL9uRqbWmCrt+iptTMdYLuqMD+z3AgiYUbxFaZtsMD56VZa
QSMck96nrCXaBgPGRoPuzo3Accn5mOdMK/Bxynqu/2mA2tdfa2IdW6Fszg1+
LtaDRUzZzKJbC7CaHWCq2VYDlOP6T0rdmkDu0oswa8syiNJNLfe1qYHNG0EP
RP6VQlbGAZ5Xo9Xw/Lxgn4pnKfxeT57u1qqGCdv9FYSYEvCZPcHyRboKprk/
3o1KLQal103fxjYRgPE5sSc3Nxc6usUrpM1LYYfdBEWzNwc2Pdq/uaKlBGjB
/s4LjDngzK/HjFdKoG7lbbbwnSx4efa57oWDv6DVkKPNfSMDLOx2fVTUzYeW
r5e7h3Z/AuYYmyml2xmgJ8OuT/JMgANjP/cO9KTBjW4Xe7nxOMh+cd0x9+FX
YDc6KcqVFQnrrUz2ctZJUHPJeLcrQwBQvZZJslNhMJlw7E/e4ivsZdsvT3rz
DkmlV5W433xF2c7n23r25qNS2fW7/pRUpP71ttjnXYCz93OsSuTTcXult3Xn
XCEa9gX9UJ/JwNyVgPzs+l+4GbpNB978wFCvf/2ScmUYVG2mf9wiDw9Yn75Q
yFKFBSaFfIvreXij10A6DKsw5OpxwpZ3P9FWvfq9z7NqVLebO0bNyMfmpP3s
nyZrcGXcrSCqsxD5NEqb7RvqUeU7Ycq5FXHnq5muz3VNSAjznZ0+WoJN8ZWp
YsebMQ7Hn/00KMFBJY/jqV7NuMZm9u9dSwmWXEje5CXdgg7BJxrufCvF38Kn
Nt5mtOKBL8KfCgZL8ePBrTtT2NpQ4yNLqBRvGe6ecHZLM23DsgeEHEvnMizY
6y5tf6AdecI1xWvPlWNseJTQYGAHfpvq4Gl9WI71Nt2j5yc6kMknXGcmqBxp
it4Z1nKdmN0Z6/dgtBwd1C6c9Vz+//c+P/pOeFdgVazPjm3G3djB7XmoLrUC
xfqf8ahiN3JaF152a6xAinxMn8neHhTcYcRxaHcl/uGrjhao78HRWaFahchK
XHNb3md7ug8DNEmm7jmVGM4adUnPqw9rP+8/NN1YiYyj/P78nX2ot33NTo+Z
gMOMnhE8Lv3YaRig90CAgHNh1SrXGvpR5fdjxkgpAp5MK+W5dWgA0cxGOu4h
AUUfObQQKwYwuvXAf0+cCeg5sZ+0j42EQ3sudti8JaCq7oPO/DMkzDi6nrUr
j37+92FVkicJZV+kvcqpJuDNg1nFc2kkZIuq/+PXQ8DgGtbMI20kTLXQmWta
pZ/Lc/qLHyWj7VGuIwrsRNwhHWG97ToZeXZWXZnhI+LvPPK9Sjsynuq3iGkU
JiKvaVzeg2gy9kSYxo9JEvGOTvtucjkZnYo+pUj+R8TzLQOLQCHjJJ/nvsLr
RFzjsOh6yT2IzA37x60eEDG39cWXKINBbD8/xx9tQcQ5xYMxDj6DeNY7wYHJ
jojX/nhEn/o2iAvO7WaJz4kYrcsvUtVKfz/n62NXDyK6DFXVXV4ZxOTLn5hD
fYko/bqU+c2hIXRi+fZtJJCIWJ+sXag4hPmmB6atg4lIvetxq8JqCF+6ZKhc
DCNicB1apoQMYZCXoxpEEtEx4bykaf4Qmp+gBbl/IOIVwqlTmwaGkKd0IoIh
hojH7bWGbTYPI5tzyAbS8e2Z5s5fx4cRPB/rFtOxjczJ0KEbw7j9yK0by9FE
PDf3OIFkO4yjubrWjnR5o03s3jkRwyjzc5u5JF3f06SFWsPiYSQlcfacpdsT
MfxmdZg8jKoj9k8d6PaGPMlLkGYZwbIwt7Zl+n185KrlH58YQR+dn/ll9Pty
n/5ga3tjBJM4Bht+0/nQ8vPIvW4zgncdVusPvCDiu/q7UauhI2jdddkql85n
pqF5qmv+CJpFsz0KsSQil+QHh/beEZwu3eSZZ0TELVbX/DZtGsXrxiSXI9pE
/LJdz3rt8Ci+EArn77xJxP/i5Yvr5EfxtL+UaLscEeM7lleszEaxSHXWXuAC
EQtOMxWT/EcxOWV3zXdRuv9irIME00dxrv9hfxEXEU2ORn7nnx3FRpsYVSkm
IiaWKx9u5h7DZ8q6h9bnCWifpEa5d3YMk80OvXjRQkCBmaLmaocxbLrmW3W2
jICu6qV78sPHcNrxzFbIJGAFvymLw88xXCv6s+O6PwFTUj1OaiyNYXecy9YY
OwKKTVTWiOwfx78Da/OCegQs0XopWy49jvEpem/IJwmYY5Sbdv7VOAacphXv
4SXg4a74qF1J48iB1aTXq5W4+r37XhZhHLUOzYlKECvxqR+DhPi2Cfz35cJf
o9RKjJeOvc1+YgIHv2TOdb6pxEX+aZmUaxOYx3SU9uZOJUoKq4fzBUygj0Ru
+u3WCuz1JXzt2UpflSmS6UU/KrC4YKY04dgkqhno8dgHVWDGonbnYYVJZOT6
+69FuQLHGbacvOsxiXzqi8u22eVYuJE2ZLI4iVHcl9ZtA8vx9Sjh7r+dFFw4
J+BRb1yOUVcFpWRPUXByJFMzhKccP80Ihy2aUrB+fi93+KMytG5+doDSQkGu
3ZMtb6XLkIVLX190moIEuzUmGlcZPs8erji0lYp7S5UNx3JL8dbZd0+PXaLi
vh+JEbSlEmQMdY4IiaFiGo0dVKpLUPFziIpFDhWbpYF5X0QJ1rtEHPpTR8WZ
zIObBM6W4O+9h2p3r1Bx7Yy6EbH2F77JbDWNuTOFictTvoIPfuGNwFKXP2ZT
OKsYmOO9WIzvOg5uLLlMYZuO/YTZgWL8THDc2JE8hSlup05vf1iIwm3a2poL
U+i8p2Fwea4AhV4eP8a3dRrve6sksLkXIMH9yF8fvmlcEG9OSIrKR8695S4m
0tPIp8bOI1xB73fjfN+PeUxjS8QFpYC7eXiVs/rrmXfT+Pfm6C+l4VzMZT8c
8SduGn+pDWsPMOTiRcq49/uiadzeM3ahXTIbzygvPVecm0Zt7m3aJqVZqLOo
2LKwPo0H//xpfKSahV79al812GiYGhu81mfwAx3K8k5JHqHhhtt7i5pXmegt
IKN45yYNk9lNr2mzZSIr4+iVSC0acr3u0p0TzEDVIYrbOyMaykRxcA5Jp6PJ
fx3GEQ403O3/2v3TtTQ0+S5O/OxKQ/MXnTti7qUi7e/veRNfGt5cEc5WN/+C
BHmhC6sRNHxIYHwqaJOCJcci9jbF09Amdu9bBedkfGJWeVcjhYYMrw8YfPJN
woplKQfHXBrG5MTVU94k4nFnP1GuYhrWy/y3K/H9J2x9lN2nU05DSb0bBNfY
BNz8SKKXqYGGxVnnNjI/xqO25SyDYSsNIyPYHvSoxmG2nknL4y4akqxc3jnd
icHmMFMQ66fh/b6oR9e0PuBkW5dk9CANj2kQfuvoRaKYd0Zy4SgNee99/1j4
IJxe78e9AyZp2NQr8NvRJBSHPN8T2KZpqLyUdCnWPASXR35rX56lYa6wXedl
y3d463L5ef4/NBxyPCBc3vsGa1VT1b/9paG15tmSsyR//J3QkEr7R8PoTkGD
yUFvdEjzOUVepuGy0cm5jWEPJJMv9Hus0rCjJZFwuN4FTVp1MlrXaMgYnyNv
32CP+Uo2ce3rNDz92slH76MFblXkSvXdoKEDy4mww9c0kF24t2GSjjULRW0l
H8jCrlgv9v//T2RdSUzYrv4QVvIbDJCOu+eYelyP2wA7NaBego4vNuwcczrm
DPObPty9S5cfElftq8ftDh58U/+E6PpHvXYV+3J6wctE919fVmj4jVvt44Ed
fqArb/q1d4mGH3RoqlvYAmGmprAMF2nYev305LtXQcCxM23HnQUanulo+yLq
HgzHZ2zDwuZoaH+x/4/8y/fQtk3PyJ9Gw3O7Nvc1OIeBTn6560kqDZU0nB2K
HCLgxCD7osc4DV+t/9vnbRkNGe2njl8h0dAy8+M9/fux8PDEfE9BD52vQ7/4
co/GQ+vTJilqOw3zgVHDYedHyGuJEnxUR8Mr5v57P237BBEijV25BBpmfCn/
cHPjE1x4kvM8r4SG6he1BrdPJMFZ3d+trVk0/Nk3m87d9xlyHrPnzqbRMNie
oujSmAwLcTs6y5LofP4Z43yU8wXsXbiueITR0GRTS96UQzrIPyRqPLOjoVcy
x2dL42/gvLqX+aIFDQ9OkRkE7mTAmQN+1ZmGNBz/c05xIzQTMgy5dv26Tvfn
vdJ6D/MfoOZ/TkvnMA0Lmwhwpu8H3Bc/qVPNS8P1aLcko1tZsPOxl88UKw1L
jNoaz0lmA4NJ17ImPf/bc20q1f/lgAnvWElJ8TRWp6wNZ5jmgrniAc/hjGnk
tjG68rQ9F46pU0owYRr3snuZ8/3Ig6GnRgYxntM4UBXyDw3zoT2E5rSsMI0X
//7lXa/Nh5hnTxUGpKYx0X6TeoBkAcjr2fG6CE3j48wWfR+WQjj1+mD48OZp
7Ft7Y50VVwSG6XHHzH9N4fvV2Zt7NhdDmaUH7/60KRzNPDOfbVoMd3lP1PlF
TiHTlY7d/qK/AJV5X4bZTqHwAzvvu2kI6D1S91xwCtcC6zl5mEugkPtuERvn
FNKufHV5c6YEGLJeWmnS6/f4I8Zc8bcloMCTevh4ExW9xA69W5MphfzIEJMM
JyomC1Ufpzyh72MXfLtlDalYZSZBVootBTbGoVofJSq+kji5fH2pFBI8RBLE
eanImq8acSulDDw+N6QtpVNwamdPe1BzGTDytkedDqGgEYfk/rOrZaCvmLb7
8DMKKtd+NYu5Xg4U1r06QrIUPHj9q0PDeDncuaPzrqFhEpXtLsmtbq+AQWKh
Q9WPSZz2lSC4nq6AH/ItMs9DJzG7/dyqp1MFtJxIk+XUnkTf1ZPlTNEVwPvx
tPb8pUnMZTZ72FJcAdcc/vIF80/iz3BJd/2NCuDq+mi0mTSBZku3RPYeqIRo
EYm2zpIJrHxdwy4gXQn+9nJljxImUF5odonJuRL8tjZTqwwnkEH7wzDfRCXU
daxVPR8YR51Zq4itTAS4JWZ5T/nXOLaWNE9K7SdAN+GcRGf0OF6MyTe+pUqA
bYaczZe0xnHcaoXnghEBfokPh3GdG8dIhvtPdZ0IwBUS+/UrzzjuMfc1uvuJ
AGp/fxOFG8bQQEE4QTCPAI4XRjp2pI2hveWHdpEaApSfFJAr8B3DxSmF+O4p
Avg+UFM0kh3D4tKTy67rBCA3uVEM+cewIf1uh8YOIpxuOsMivDSK+84/bIkS
IcLnt3Jl7Jn0+S0lrJPpAhEETxx0FA0YxV0HEsU+yBMh1NKxepfJKL413NGo
f5sIZNFpuWqZUeyw9S69dZ+OmUbtFfeNYuXC7BYrEyJUzz2fCFoYQYenT9Oz
nhAhkNlb7HMDfZ59a1By5BkRzs8FNfp8GUExBeM7Ra5EgJw+Q6lXIzhLeuTy
wpsI90T0rX/cH0FNpjQto9dEqEjOe7sqOYL673K3PH1HhE4fqRu7OEZQxutp
akIoEY5UtEmvjQ1jWOZ+q8UIIoS/PPcnu2QYX5jrOz39QATrwE8MVyKH0fLI
VQb2GCKobGZeCbUexgfzly9W07FgwZhdiTJ9Pn/5LjSTjmvXrkSaCw4jqlUx
tEUTQel+0HnK+hCWTeYMS9LlpfVw1ct3DeHM9dDkZrq+GCGzJqesIby3zJr3
lW6PbNmXEp/AIXxWfuxVMd1erqv3eZ+aDqH9RwtX1kAiaLrZ3DgjO4QFz6oO
v/MhwlTltZEmviEUr0gcu+VOBJ7N6RqqfwaxVr5fRdmZCBbrVYc/1Q+iZFRd
o5MNETydzla0fx7E4vKrK2RzImiZTOSPuQ4i+XPYHXcDIvSzy3m0aw6izLNI
Yw11IohKMkR/khhEZ6f3i0lAhD1RViXdg2SMKWiM5z9DhNuKZjXyhWT86qms
XnOUCD7xmoLvQsjo62GnX7qVCI/KXGpqrpLR2r7hH+sSAaQJeXsK9pGx2a7o
uO84AThFpwsC5klIrZrfvL+SHp85rYydH0n4ojeA6/QPAvzu3JJ+x5mEm9ju
OTvHEsD4/YXsrNsktFkoVE2wI0BvTeXI4U0kFNe2lJTZTYB4aT3biLx+9Ns7
fG1wrRIS6ld15h7241Z3w/nsoUrwtS28zM/dj/G87HqUtEp4VJW3Y9KiD9cL
g9giJSvh7LHvgi78vfimaA9X0a5KkOcSWHle3YO1PpdqdixUwOShc4J37Xsw
as5R7Or3ChCqtv/4vq4b03tsDMcOVMDW4l+1tk5dmJmSGeKzVA6DN6q+awt2
Yee9Zi+N5nJYq8/SOtLQiczHDv/1di8Hk+7LInqCnbjBPkgVai+D5m8LHuH1
7fiZgezzRrMUWoMrulj2tyKPJil/9GApLH3y26n6qwWvL0tXXB8vgUM8bzvc
DVpQovHivLJdCTArKJtWJDYjo0h69HZGhCc1Yy61ok0YwONhuqW3AN64sBkf
eFaHtZyKTcw3CyBKWpt1o7AWo3Sltp0pyQcOzSP9kxs1+Pn2ut+BmJ8QVfao
dNanGk3rV70fyeaC6KuRnVsiCWiWKGorJfkdXjp9lUkoLcGbJ9uSBgIywecd
KHlsKcFzjU9NkkozoPGkzoszH37hysSZ8cts6WClGJhKzS7EW8Yc9jsckiGk
qvvf/ekcFLY+SVG8Hw6v+/ZdvL+SiHWBG3x15tH4wU3o8mpMMugdL3pJJMah
gjb/0c0qX0HjQevU29AEDNkZfHHb3zSY9o7Z1rspCYXE7i3MH/4Os4les5F/
U5G7otGQ0SQXEp+OT0aI5uC/x07nQ7RL4N+jtpg9e3LRSF/iUvVqCVDkRn4X
bc5DA2pB2316X2JJitxsTP6JN0J5G98PlMEDz7CfLclFuGgT586pTa/rKnlG
LGfK8Oa/ZQEfsRoYH6/9xPu9DG/RWhXTK2pA131FL1q8HNtXeH25dWrBpk7n
66aTFTgvGn4ixKsOlqYFMv6KE/DtpqGaS02/4b/yxIskhRr8tWOprj2+CUpy
E/gktJowmnWT33pxG3j+no5niWzCbburmKoW24DN7VfBXGcTmpmc3CIs0Q6h
G0p72LSacWjYK/TLx3YoWO4wPKLdgo4qKd8S3Tqg6LmL/jH9NvwR/1aPQ7gL
gstcBpbi2jDNr6mcRacLLl9je9RKakOOqN8nAwO7YMSjeSLmQTuuS4jayM92
wVkNa18zkw5UylMK18zqhlZf0XDWx114Rv+je+6hXuBWUf0x9a0LN/Jcy59e
7wWKw0p7Na0Ls++1q2Q/64WppkZrc+tutH4Su9FW3ws+57LUROx6kO/Kna0v
bPqA9X7i/WGHPmTd+uHO3qR+SH89ODCS24f3xFWOKlX3Q24Yu1jT3z4s2AhV
W6X2g56BjJqhQz9KsBiy/Dk9AGL3vmy+bjeAahcshffnD0BGQQmHdA4JObRM
du3RIEGJRW/TbDsJU4q8/N1NSHBF66Lb238k1Gwu/p5gTwLf3AdS3pfIuH/D
eoo5hATlv7wO3yoh44jHk6u6NST4EN6t/x+ZjA60EvPnHSRwE/XM28s4iDdY
u7luDZPg9emJW/ZXBzH2aefY/jUS3O2jOjZUDKLSStBfOREycJxQaO4aHsQw
40ir3VJkaBIQ8KzYPIRHpUi+8TJkWGvxCz4vN4RUn/a29rtk4Dp7meJfOoQE
68azbU5k8ItXDvIhDaHuF6lTeh5kCHEN7NffGMK/ZCu5WH8yKH3pFkq4PIzn
PMu3yUWR6XOx5k31nGF8j+NvhXPJ4GVwRPBgyzBab2lstCwig2Nm/fbSGTru
FJsxKyPDAe6n/V4iI5iwd1zOr54M9sDwOUVpBAXvphWkN5MhwfTL1XjjEUxk
ynnr30EG3SHxKra4ETTb/G/EikSGleuDIS8LR7DmqMN3u2G6PZu1Nso7RvCv
96+nZ8fJIMhr/LJnfgT3h25STaeQ4RLBwquCYxRvxn20HJgmQ+pOc7+XIqNY
0SmzVjNLBnbZuY2tiqNodS/t+NM/ZGDWOq9v9GAUhRgmBRr+kkErk1Ug0GUU
w99JsI3/I4OncVeWV8QoPrSh8hcu0/nty4tQzRpFs7RsH6VVMsiCvjy5fhR3
E+84B62RIXn81Jmr46P4J7FUOGSdDIqj53utGcfQWvsI8dYGGc48PFVouZ8+
B21U+1fTsTG/m8oZqTFceiHxdY2O1ar+21Z5cwwdb2/cn6LjRDdF60PmY5h7
j6E3go4jxXgYlDzGcNJR1HATHZNHxqTOfxjDz7YfjgnS9S3cLH43mzWG/J6B
Fpvp9vBtuv7Otm4M/biMHyWs0Plt5sgtHh7DLVqfH6wskWHbf7LuDatjSOb4
G8JNv29lMdkuhT7nqTPsgbEFMki+U1H8eWIca3MvLSXOk+EeD39RqMw4LmQU
HjtO57Mp6OtjGfVxDNOdZLCj8309Y3g5z2IcDXbNoBfdH77c2msrbuP4krkm
So/ur6qZ8zvZw8bR7ahy3Trdn326O2ffIF3+9XCBsD4yaDwP/7updRyPPz+U
F9hFf14t0v/K+DgenaoIvd5Ghm8Hb5B4OCeQvP6D/1gdGYRZKoe/HZnAJ5wi
8rJEMpwKllvjOjeBxSs8GYL0+ItrvrkooTuBVXMqN5XyyOBTzHZo+skEurbv
ZPX7Tgax3DM0a48JrO2V4XyfSoZfeq2cDZ8nUFtUmpM1js6PxN4fyT8n8I5c
5nv7CDLcvWQcolBD1xdT5ZT2jgy1euH5bdQJ/KHg+MrlFRn0e3eqVa5N4InH
387veUGG8BPEJqcdkyhNq3niakcGE5XjUqfEJ9EwdXNg9kMyKBMifautJlF4
eK6u9D8yHC/UUel4MYl6q8ltVRfIYMfRbpocMIkOSZaVsafI0BO8YB+YMomX
tDYif/KToflMRP3H3EmMM7U6uLaTzvfHmWtOFfS9REq4iYuVDIY9YQFmA5PY
0cG/mrZAAvNijUI36iSa9Srzn6WQ4AlH3oTm0iQe3PMx9zWJBC6WCoJK3BRU
UWr5nEWvT5zRolZ89L1nY7PpPDmaBOcPJ46fUKWgq1KU4noQCQy3vrq8pE5B
tnah39OeJPCPDnr024KC+29Qu69bkkBl3rGy1Z6CvEZU3mJ9Etw4dHE53JWC
3rONMwx3SLCP1Xj1TjAFT+sfndl+gQQDIm9vq36g4GNZSkObCAn2rO8J2pRI
QSlL6TI7ARIQ/OMHP2RTcG+urNYFJhLU7/fz8iii4Ii3ghNODsDj9RRxwQoK
Ft8f0i/+PQASZoal4c0UFFGYC24IHYB/GUlRil0UfN5fk+ToNACfUwUNsgfo
z+sOt7TfH4DCm6Oz5RQKFtVrPCo+PADqApqGJrMUrOsUVVZgHgCFFw+ZKv9S
ML7j9Cm/sX64zycmnruJivoCOttlUvvhiDWLkRIzFU+bDrjlvO6Hw8s5/GHb
qPjQWG1xzKofrro5S8Vtp6LndTuJzhv9sFnMzsuIi4rV/s0z3uL9MHsuaWiQ
h4q97ysW/3D0A2/I3An+PXT5ZWbbjsz0we73glLc+6j4Zk/CBFdjHzBGjZFK
+el77x5O3bKMPpjJqNsiepCK9f67jku+7QNl0Wu+tw5TUVWudqfF4z7oVi2S
ERekYtA0w/DD633g12DMWXWUijNVVwyPiPZBqc/TDr5jVCw2y7qTzNoHYTNT
DseEqfjMUc5zdrwXPAs7GqfouMfqRREjsRdY7nNWWR2nIkE1kNCT2Auv3hrJ
JNPxqbuqVi4evXBt0Fsgio7f5J18Ma7fCz2n+JQU/v8/0k0F5L/SC1uFUj6l
0uW1qEgzCfD1QkrO5z01dP2O/Rq7Jv/2QF2I49sEISpyTJqUe7T0QGOK2awE
3d4tqb97xjN6oM09W/j5ESqm6b8U43/dA13FHgddDlFRaHrK56BZD7g6jlec
O0DFFV++wvmrPaCdOs6Yup+KebdfhYcf6IH+KLuq9r1U/LR0dJp9pRt+iFhu
LuSloqvB86C77d0wfTX2s8ZOKn45bXfryfduqM2OIuezUVHE6p7tIdNueDGW
qee6hYpNsRovCmS7IXIhknWNkYrt68dpx/d3w0ZLY+nBJQo6Giw8eNvYBa6n
aD8J8xS8bSG93edrF0gwe+QKTlPQsnfGVtOzC04/YkneOkjBQxT++oBzXfDv
xb3ANz0UjBH/bkHj7AJj+1aDulYKXpTvFDg12QnvvnuXPCFQcPm7qYBqdCcY
W3WI3/tMwZU7J7hZNjrAXvagQlQMBffYtgyad3TA7HqgXPh7er6Yf/b6ntEB
nS362/LdKajxMjWRpt8BHTYdd6M1KTjI9B8zYDvkHbkmlkHPdxHmnHjzkHao
mZi1sJKhYFPP5yPPTdthge2WBlWInt+Th85rcLRD2CfexgXaJGZU/t7CrdcG
NlGEAmPyJPIIZV4LlmiDYmplonvzJHZ+UhdiZG6DJqFLvcVZk4g8aptyUlvh
lKPQxDWbSfTW2Jno9a8FVEeutvEbTmJwgzV3Qm0LHL3xOz3mJv381FFidmwL
2BN9sxJFJvGm4YJ6tVwLnEylyrcOTOCSl4dyZVAz9Ljzmw6cn8Dnwemnl4Sb
YI2PM/T94QkUcVUS5ltthJ3c3zyW2CawgyfWX66hEUKdn71s6RtHfUbnhnz7
RrixNc78t8s41j3pifXxboDuQNvvuzPGsEfE5PHL8jpofvV4YCRkDBeZw6fH
LepAxIEwZPpsDAtP7HXz4amD7MAD8b4y9H5tMEwzM6mFvMZXL+Xp84JNR4Xq
AnsNLLAWWCx0jmCy/OWdMyZEkBsT71GmzzuP9ojV79tLBId/s28NYujzULHt
6aBaApxzn1ltMxjBgqAvJ7QkCEBKV3eZGB7GqHnjuLBNlVDEmxC+TB7CHc+v
UzgyyoDhceLhyJIh/BwrnfzcpAzqn0Qf2ogdwnvyxkOKAmWgXqk2dFhnCPPc
7gdseVsKZ7ckPGtpHET5tOWJa/YlsKKr4iryg4yjvyZ4T6QVQX6vG5tVIBkb
429Y6AoXQUT1DqYXZmR8FfbopEtSIURcDKllEiAj26tsqdcfC+DM6S/sBG8S
uvQNZpxM+Qkxu3dnDcX2o0vcnQfJQ9kwMbLb3eFmP5JZgnWqn2QDv9GbF983
+jBRRPbq+moWrPOYvTyi34e8y4mlX/iy4J5etwcnXy/KDR12kjP6DsLz91m6
3Lpw1w/KUKF6GmiklU25H+5C8cvi52tepEKzs3d6Q3kn6mWXmHYmfYW7oaGr
esydGPzpyfxWhi9wJZhvv41nO3KLG1Yp9CaB2y27dZMj7RgQLeNN4kuCGSUT
K7ayNjTqsTFIuJ8II4uVJmbrrXgxvyb868RHaJMUU4m0bUHFOMvleyfiYU83
C7sEZwsedm3Yo8QcB3c/6Ji+SmvGotYFfseiGCi4avhad7gJ92sPHUiX/gBf
nyof57jdiN7r+2+rhIRBar9PjEJHAxpcXJ+47RQKlksbLctsDRhQK9hz1OQ9
/NSX8eG2q8fTNNXJm3eDQTjx9PZbUIPfXl/6l80SCJknJ1OFratx9Nz9Zwsy
AbDjktTjxI9V6CfqG3vKzw/eP7Lhe7eZiMSkfR4lV71BeTF7dIskAZ+3F148
nusJmpG8H8SMKzH8ls3bbKlX0LmvOuhdRTkeExpS0XjgBhnOv7BtvgyFMj3n
N/heQroDw4/Ww2WYyqUW1xP4HIyZDat3uJVgZmSu25NqB1BPj6yNu4+otWRQ
LxdsB7IXeMwyfhbjlt+p4f2ONrARRsE3TwpwIUnhjeAZK1j5M+b0qOYnttUW
+PmkmsPFsqD3FME8TC3JIjfpmgDQ9Hfucc1Brd+VhbuvGUFnsPLKQmcWPuR4
32Px1AD2MCaoBZz+gdqpJDlM0IFc8trB/oBMDFLbLMDSoQ45dv/1j1eno3TT
hFO1mxpsLGcHpjz/ivV9WcGK0tdBnafLeItYMuqe47TUeqgAxpojLlz9n9Ao
5LTcnK0MkE4GTDe/icd7jMOxlt1SUO/u/injZRTqGY1UcsqKQXb2Li/NgRAs
Vvsy12J3EFLM9tlau/qjC7Flb7nsdvgilziW4OqMmx7LZtBkp6RZ/WNVLzjV
FFEDblblnAm88D+VBwzH
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$4159#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821696981924968*^9, 3.8216970365774717`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"06895805-8d13-49b7-9fc4-6ab32a812684"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "\[Theta]"}], "]"}], ")"}], "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8215301652987137`*^9, 3.821530207420217*^9}, {
  3.82153096102129*^9, 
  3.821530963106365*^9}},ExpressionUUID->"cee66a75-3ebe-4a40-afe3-\
117e7ab66c01"],

Cell[BoxData[
 FractionBox["\[Pi]", "12"]], "Output",
 CellChangeTimes->{3.821530208209001*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3a7f8dd0-f128-4390-bf69-209b23ddc456"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.3", "Subsection",
 CellChangeTimes->{{3.821531002031859*^9, 
  3.821531004151338*^9}},ExpressionUUID->"47b1a1f6-8756-442a-a6d4-\
94440cd3f4f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821697955628593*^9, 3.8216979693653584`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ab60474b-c286-4e05-a121-15d4b12629a4"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$4989#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821697969744972*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"db4e0fcd-3992-42bb-82b3-f2638c59f00b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82153101333923*^9, 3.821531055409026*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8ff700cf-6dbe-4302-a9e3-719b4c473da4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]"}], "2"]], "Output",
 CellChangeTimes->{3.8215310557832603`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"529a7ee9-e5c9-44fd-9bbe-70a97826713f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.5", "Subsection",
 CellChangeTimes->{{3.821535042650098*^9, 
  3.821535044928112*^9}},ExpressionUUID->"08bb7bf3-85ae-492e-85b1-\
3fe05de3999a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821535222001206*^9, 3.821535225327424*^9}, {
  3.821535290109961*^9, 3.821535306549892*^9}, {3.821536548494649*^9, 
  3.821536551936738*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"5c5b6acf-2d9d-4dc0-8dd3-e3f92ab827d5"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
aQA=
        "]], LineBox[CompressedData["
1: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

        "]], LineBox[CompressedData["
1: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
1VutmQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$7952#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.821535225775502*^9, {3.821535291572912*^9, 3.821535307639698*^9}, 
   3.821536552556769*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"badc1f8f-dc9c-4903-9671-23df6ee74cad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.6", "Subsection",
 CellChangeTimes->{{3.82153565096917*^9, 
  3.821535656840929*^9}},ExpressionUUID->"ef095f8b-3c6e-4bc5-a5e3-\
bcd7936538da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821535659677045*^9, 3.821535673016008*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d7d089d6-39e3-4894-ac72-ca2a4b715ccb"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxcWXc8lv/3LhoqioS0VEZoGZXtqOiDzIw2UiTKSgkhIaRhlL1HRkZWSDlk
i7LJfPZ9lxaSSup3f//9+cfrcr/u93Pe51znus55bLN1OWbHtWjRIvbSRYv+
9/v//+ySa3wcHuUCmuM2n+OkJjStalVLXKP8gckK/hUs9U/zReMZorQwBDSD
W2PjgwVAmr9ObGnUQ/CeuiKrKiUGJl3Crfw10aBftXZZiYU0DE3Vnl8oiIWa
I9ZPVILl4d5keH59SiKsmbvzOWtICQob77AsI1KBdsBwZqUkwH6p1btH6tIh
dP7g710Vh0G/QCj/cnUm/O5ZR2qa60JhwIoHoyXZUEJv537mYgg/r9J8d+Tn
wK2C/K/Vgabwo2hii35GHljLc7vU3jeHqvfpwgcTnoJh5vEN4/3HQbygOCMl
rBi+aFU5Gm21hkCu1Yf8655BV8313COR50DH3fDp2pclsO7fm+lzJech8PoK
pbHSMvjYvZvf08gBes/9XixQVA5DPw1y7d44wj7zCzHb8irgUj8rXeXiFdie
kOvSk1IJ/91p437p6wY8mQbWLvFVsPPveZePv9yheM8SZ0Z0Nci5kj98gz3A
1vrXQe3QGsiXWy7d1O4J7Ywl+q3OCD3PPO6c4/MHB7M/wzOKdfC8aMkT8du3
gGE1/vfiszq4dWfmr1JwAGz9G3f4d249OLitkFTLCAQvJemK4rgGeG+hUHxO
KRQ8dgt3Hl3XCIoN2QqxLmGgGUZg08NGINs/XTlRfBfqTdqnjO80wSLv8U43
nfuwb16r6olbC+zK3qnZaxcJz9R5Bzd8aoGT8f9pfxOLgu8hb43t7Vthu8eH
X01jUXDwK23drVNtsGRUUu7RhUfgQHd3yNV6A1Lv3s3cSYmFhoKWI6JL3sHx
1Zix+HUKVGeZRBQFvwOu+6uZN9+kwltu/sDb3F3wd6mjedzlNPBNEHl1I6gL
og2fdSfcSgfWCkubgaBuqGmPZhTVZ8Lh/1qcSL9e+P1vp1v6k1zQ33DQMuBV
L3AuXxuwMciDyHtvlszM98JEiHTwtu95EJS/udnqRh8cmBJXSNV7Cs4rPsTq
u/SDimBLkQVvEYhu0apdaTEInIWot9fmSuAG7+aIuYhBsGkdyCBPloJpa1RF
RccgdN24UHX0VSksKz66J+vwEIx8mNg1fqcMXKw/W2jsfQ9u/wi9dZIVUDtY
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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$7318#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8215356737153997`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"7ae1679f-806f-43bd-b328-6c77c5358570"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.7", "Subsection",
 CellChangeTimes->{{3.821536507787401*^9, 
  3.821536514512887*^9}},ExpressionUUID->"20bfca14-af82-4571-a656-\
4cd4db015086"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"4", "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821536519189871*^9, 3.821536534040249*^9}, {
  3.8215366203486757`*^9, 3.821536625857476*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3b701195-7798-49bb-85d5-0e47c72ffd77"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
enFmFbfBRTkaeR8MaGZubqzhdkuHHHTMGIjU8JtYx72eZf03nQ8Bm2Cv4g3c
cTn7xCwFCoDDV+CziTv4gUr/GeF8oF9Ap7CFezDX/wXzwTxw+DRvz67HrZxf
TB/+C1Ztvj7exn2z1Pe/7hO5QJVhaHbXz66TmtrP/AGF7yZNd3DzlluCAdnf
oBJrKNt1049CmZXzOeDCg7gDZNyTx+Qu8VzMBmfvGDzZ9Y2FofnzV7JAZeB8
5q731WDFNhqZgJFRbX7XzR/yVVJ0MsDvqiuilN347s2hWdVPB47kPM1dezW6
uF8yTAPfqqyf7vrAVO2VKLNU4GApFLRrX/c/5Rt1v8CeQ04/d83+OSynrDMJ
dFw5ju160+ORdfxIIrgr2VC/ayXzS9T+89/B2vn1nl2bcZ52dd/6ChoGJMZ3
3X9WaM2NIQHYBPTO7fqX3JizDzEeCJT5rOxa5/st4U+CseASS8DGrhmC7g8/
1voMDoyobe86yUyZIf1+BDg9wUbeNef30DIa51Awlkyi7Dro0DtVo6AgMLg4
8j8XUeWK33H1Ar5dlP+5U9/J8oPJQ3C4qPp/Zvd4IKryzAet57Nv7fr3ma3l
PyafEOOVrLVd57BF2V04GIN8l0cWd+2yvZIovjcOqSeC6V0XkBq9+Tm/IJK+
/tCuRd9bbvDQfUVH5rPbdi3jNb+wd+MbKrftKd91hYu98bHZH6h++EL2rq1r
GE9dHfqJbK8rR+/ah/nD9eftyaimR+3Vrh/YLf/9VZOCimK/m+6a8tf+h9NA
Kiqsj5Pb9T3qMDqJ7jT08as9y665vaJHu1vTka3lrabd5//MobI0oiEDpb2w
/rDrwm1FQbPqTMQp1aq6awkDYaMzZVkomDd6ZTfe5M9b03IWZaPy+PqQXb8c
PvRqJS8HVTk+OLzrK3eP643l/EafVK+l7Mbvu5brM8Ppf9CtZrtDu64LN/43
m5yLvFbS3u7Gf4Xnig79j7/INbpxaDdf5MWS2Q5/ycPvL0p814Ez9P/djs5H
ua01+rv5xeX8qPdjRAHa/vLNaDf/YtBhW/mfCL3WPai2m5/6HlXGa4YYErjv
JLCbv/S3C07cHsWQomZdzW6+t79TtCm1KkSj9jImu/Wg6lOorcJaIeJR+lu/
Wy/0iqdc8tyK0GXB8Yu79SXox1RvV0Axku7QU9qtP6yObyud+EuQReg9vsnd
+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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$8586#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8215365346967154`*^9, {3.821536622182354*^9, 3.821536626738955*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"79a86ee3-0d6a-4ef0-b063-2efc7c41c4a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.8", "Subsection",
 CellChangeTimes->{{3.821584611191592*^9, 
  3.8215846135203657`*^9}},ExpressionUUID->"a1f406e4-43c9-46dd-a79f-\
4ba7da8a73b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "/", "2"}], "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821584614793022*^9, 3.821584632776017*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7145c1f8-fc19-4c76-bbbc-ab16863588b5"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, 
       "Charting`Private`Tag$2925#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8215846331959667`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"296383c5-cd5f-4183-9abc-181d6d094d49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.9", "Subsection",
 CellChangeTimes->{{3.8215846724129887`*^9, 
  3.8215846766845627`*^9}},ExpressionUUID->"3ba1b293-ac5a-4e3e-91e7-\
25897841a937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "\[Theta]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8215846512441998`*^9, 3.8215846659100513`*^9}, {
  3.821586615247985*^9, 
  3.8215866216565638`*^9}},ExpressionUUID->"3e3a772a-91d1-4a88-bf0c-\
01e710597fcf"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$3345#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821584666229494*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a05f5b39-3b1d-4031-8a34-71e805f8fd99"]
}, Open  ]],

Cell["\<\
The are described by the rectangular conversion of the problem, which is not \
the area required.\
\>", "Text",
 CellChangeTimes->{{3.8215865421982517`*^9, 3.821586555845456*^9}, {
  3.82158662550386*^9, 
  3.821586633475308*^9}},ExpressionUUID->"3531aa19-63e9-4998-b88e-\
c18ee5004063"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     SuperscriptBox["x", "4"], 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     FractionBox[
      SqrtBox["2"], "2"]}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821585008120626*^9, 3.821585046314735*^9}, {
  3.821585813434306*^9, 3.82158581347453*^9}, {3.8215863898292017`*^9, 
  3.821586415799492*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c1045d0e-0d06-42f9-be89-01207362d592"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
qTqmpZDQ0FWjZv/g/Pe//utz/wPFs8ZQ
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 158, 50, 157, 129, 153, 105, 125, 149, 85, 101, 121, 
         145, 69, 81, 97, 117, 141, 57, 64, 76, 92, 112, 136, 49, 48, 47, 46, 
         45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
         28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
         11, 10, 9, 8, 7, 56, 63, 75, 91, 111, 135, 6, 55, 62, 74, 90, 110, 
         134, 5, 68, 80, 96, 116, 140, 54, 61, 73, 89, 109, 133, 4, 67, 79, 
         95, 115, 139, 53, 60, 72, 88, 108, 132, 3, 66, 78, 94, 114, 138, 52, 
         83, 99, 119, 143, 59, 71, 87, 107, 131, 2, 84, 100, 120, 144, 65, 
         103, 123, 147, 77, 93, 113, 137, 51, 104, 124, 148, 82, 127, 151, 98,
          118, 142, 58, 128, 152, 102, 155, 122, 146, 70, 156, 126, 150, 86, 
         154, 106, 130}}]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 130, 106, 154, 86, 150, 126, 156, 70, 146, 122, 155, 102, 
         152, 128, 58, 142, 118, 98, 151, 127, 82, 148, 124, 104, 51, 137, 
         113, 93, 77, 147, 123, 103, 65, 144, 120, 100, 84, 2, 131, 107, 87, 
         71, 59, 143, 119, 99, 83, 52, 138, 114, 94, 78, 66, 3, 132, 108, 88, 
         72, 60, 53, 139, 115, 95, 79, 67, 4, 133, 109, 89, 73, 61, 54, 140, 
         116, 96, 80, 68, 5, 134, 110, 90, 74, 62, 55, 6, 135, 111, 91, 75, 
         63, 56, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 
         23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 
         40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 136, 112, 92, 76, 64, 57, 
         141, 117, 97, 81, 69, 145, 121, 101, 85, 149, 125, 105, 153, 129, 
         157, 50}]},
       Annotation[#, "Charting`Private`Tag$12371#1"]& ]}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, 2^Rational[-1, 2]}, {0., 0.7071067378942969}}, {{
     0, 0.7071067811865475}, {0., 0.7071067378942969}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8215850344200974`*^9, 3.821585047064839*^9}, 
   3.821585814355606*^9, {3.82158639811773*^9, 3.82158641609559*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"87c59fdc-cdeb-48f6-a985-49a655d8fd75"]
}, Open  ]],

Cell["The area described by the problem.", "Text",
 CellChangeTimes->{{3.821586513724997*^9, 
  3.821586520108906*^9}},ExpressionUUID->"a9a8d46f-7443-48ff-9628-\
9599b12069f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SqrtBox[
      FractionBox[
       SuperscriptBox["x", "4"], 
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     FractionBox[
      SqrtBox["2"], "2"]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821585648564105*^9, 3.821585711547124*^9}, {
  3.821585817801111*^9, 3.821585817866185*^9}, {3.8215862629946413`*^9, 
  3.821586291363633*^9}, {3.821586424265995*^9, 3.821586436954771*^9}, {
  3.8215864714460697`*^9, 3.821586499292542*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"d5197a66-c98f-4d71-aecf-53300454e753"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN1lk4lXsbx3GpbEkiMpWhLasSbzKUHT03timElaFNogyFzCLsMqwiJDLb
CpGKTGVJpTJPtTMPGRdirRSZpSTe3gP3eg+e63P2XP+j7+/eZeN2wp6VhYXl
86/vf6aSrv5j+9OAWPOIHPfUB+dIWPN1XyH1S1oqOhAYf4V13QN004qMmytX
PlrgFirmblGEFirpvjWceIpqUGXtit6+QKfubZTcmPQa9fU5abJ6qwKt9np9
8/XlKvRI6s29zdo16Kt1nV3dm+pQ9vL8ZYnZejQoe/pq1Ys3aOXnGkrmw39R
LgfuBP/IRjSUp479gVEzOhrO5h+e2oLu2GV915HSij6zC6I4+beh3ZqnXT+6
tKNbj05xcJE70NyhY7am2p3o6RRzZy2ZLjRhZncgles9Krfw/Lja+m50lIu1
0fcj0x8dvOyttB40WWlY/35rL6pXZKsuUdyH2nYXzFXm9KMxfIWmHNEDqMak
U2WTGw21vDg1RrUdRDXD4s9kSAyhUXkJUt/TmH44NfNOctsw+r1H6iL3VaZ/
Fuj43fjJNHlLpVmf2wdUrFok9uU4U0ftv9rM7UfQMrMvn991MdV8de5sC3kU
fZ935HF2DVNp54n1oEhHqcGUp/aFTDV/94Kzuxgo40O5Vdpdpm0XGLRR58to
IkWoefUMA2UdjC0bc3ZGXU9oXZdVY6BlRRP8zUFMbWvHr0w7W6IWpZYjOgcZ
6CPh9V4f3Zm26XaVltxiKhmburzqrI8aTZ7nMd3HQO8acGXMOTBtCBgeqwpj
2s//b+SjZKbZ+9ctibqooLphLntPSTLQ22O8z7/bMa0W/LjacI3p+8ct9x7H
Mx2+XOuddYdpgVXDvKWLNKpjOi1vJcFAk58mVi/bMK2gO25+R2HaccW4kBrL
lHZMJ/hhCtPRQnWnjDSmax37emLxwAxrgcpax1rJJlzpqvuwY0JfDp3nc9XD
jhkqyY9OH7PCjtXKRdVtd3HCjhldOvrJZoc3dmxyntA0IAVgx/QolRtmR69h
xwTozi9qb9zAjlm6reRa68dgx97LxIg4JiZgx0D0U+439hTs2LnllvFPLWnY
saqd4r/nH83EjuW13u0r23kfO0aRl48w8s/GjsVzum2Z4sjDjsWoOBiMpxRi
x/xCjOa+DjzBjrFZrxj3jFOxY40NsilCuiXYsSPb3LIlq59jx/KfVtX7KrzE
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
a5Czf/3nv2QsS0I=
      "], {{{}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{78, 207, 183, 231, 163, 227, 203, 233, 147, 223, 199, 
            232, 179, 229, 205, 135, 219, 195, 175, 228, 204, 159, 225, 201, 
            181, 128, 214, 190, 170, 154, 224, 200, 180, 142, 221, 197, 177, 
            161, 79, 208, 184, 164, 148, 136, 220, 196, 176, 160, 129, 215, 
            191, 171, 155, 143, 80, 209, 185, 165, 149, 137, 130, 216, 192, 
            172, 156, 144, 81, 210, 186, 166, 150, 138, 131, 217, 193, 173, 
            157, 145, 82, 211, 187, 167, 151, 139, 132, 83, 212, 188, 168, 
            152, 140, 133, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
             97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 
            110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 
            123, 124, 125, 126, 213, 189, 169, 153, 141, 134, 218, 194, 174, 
            158, 146, 222, 198, 178, 162, 226, 202, 182, 230, 206, 234, 127, 
            50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 55, 58, 62, 67, 73, 
            52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 
            39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
            23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
            6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 71, 
            1}}]}]}, {}, {}}, {{}, {}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
           12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
            29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
           45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74,
            68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
         Annotation[#, "Charting`Private`Tag$15084#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{78, 207, 183, 231, 163, 227, 203, 233, 147, 223, 199, 232, 
           179, 229, 205, 135, 219, 195, 175, 228, 204, 159, 225, 201, 181, 
           128, 214, 190, 170, 154, 224, 200, 180, 142, 221, 197, 177, 161, 
           79, 208, 184, 164, 148, 136, 220, 196, 176, 160, 129, 215, 191, 
           171, 155, 143, 80, 209, 185, 165, 149, 137, 130, 216, 192, 172, 
           156, 144, 81, 210, 186, 166, 150, 138, 131, 217, 193, 173, 157, 
           145, 82, 211, 187, 167, 151, 139, 132, 83, 212, 188, 168, 152, 140,
            133, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 
           99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
           112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
           125, 126, 213, 189, 169, 153, 141, 134, 218, 194, 174, 158, 146, 
           222, 198, 178, 162, 226, 202, 182, 230, 206, 234, 127}]}, 
         Annotation[#, "Charting`Private`Tag$15084#2"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> 
     NCache[{{0, 2^Rational[-1, 2]}, {0., 0.7071067667557969}}, {{
        0, 0.7071067811865475}, {0., 0.7071067667557969}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox["x", HoldForm], 
       SqrtBox[
        FractionBox[
         SuperscriptBox[
          TagBox["x", HoldForm], "4"], 
         RowBox[{"1", "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}]]]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.821585669702407*^9, 3.821585712032395*^9}, 
   3.821585818373831*^9, {3.821586278991881*^9, 3.821586291962028*^9}, {
   3.821586430739814*^9, 3.821586437487183*^9}, {3.821586472745079*^9, 
   3.821586499621307*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"6409d05c-0cb8-43b0-ae83-0cbeb1a51ca9"]
}, Open  ]],

Cell[TextData[{
 "The area under the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "x"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7eb898f5-abd5-4434-9616-e06bad2f749c"],
 " on the interval is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "4"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "98b3f0ab-881c-4a7f-a247-9196609f226a"],
 "."
}], "Text",
 CellChangeTimes->{{3.821586566284954*^9, 
  3.8215865866350718`*^9}},ExpressionUUID->"4e135096-0f45-4547-bdd7-\
4d994c521df4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], "-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     FractionBox[
      SqrtBox["2"], "2"]], 
    RowBox[{
     SqrtBox[
      FractionBox[
       SuperscriptBox["x", "4"], 
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}]]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.821585472157069*^9, 3.821585495793544*^9}, {
  3.82158555045361*^9, 3.821585550867861*^9}, {3.8215859096253633`*^9, 
  3.821585929921895*^9}, {3.821586238431519*^9, 3.821586241048562*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"48181e31-c281-4391-90a5-320fb2eeb045"],

Cell[BoxData["0.10730091830127586`"], "Output",
 CellChangeTimes->{3.821585496644452*^9, 3.821585551355201*^9, 
  3.821585912958971*^9, 3.821586195748044*^9, 3.821586241548208*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7988034a-3bf9-4852-8b12-7b657511b0cd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{966, 1035},
WindowMargins->{{308, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b920c351-a2cd-4738-97e5-605bf4c3e98d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 957, 27, 64, "Input",ExpressionUUID->"739b7f31-5cda-45b4-8b1d-7f3291c43b53"],
Cell[1543, 51, 1887, 37, 370, "Output",ExpressionUUID->"9b191053-f52f-4082-9908-ec2bb463b2af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3467, 93, 175, 3, 123, "Title",ExpressionUUID->"64cc87bf-d154-4d2f-b34a-2c68c3b90f90"],
Cell[CellGroupData[{
Cell[3667, 100, 242, 4, 84, "Section",ExpressionUUID->"3f909034-86e1-4186-9780-c0f3cf5fa004"],
Cell[CellGroupData[{
Cell[3934, 108, 159, 3, 67, "Subsection",ExpressionUUID->"2cfdce39-b960-483b-aa85-a82946877f65"],
Cell[CellGroupData[{
Cell[4118, 115, 440, 10, 37, "Input",ExpressionUUID->"8948e8a3-6e35-4d27-abc6-320b1e3667d1"],
Cell[4561, 127, 37849, 659, 421, "Output",ExpressionUUID->"1fc5a509-71a2-4fec-bea5-1d2dd113e5ab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42459, 792, 159, 3, 67, "Subsection",ExpressionUUID->"864c2a1e-d1af-4d86-a688-f27f5a3b680b"],
Cell[42621, 797, 404, 12, 44, "Text",ExpressionUUID->"9af9e0a4-e827-408d-89b8-18617c7ce41e"],
Cell[CellGroupData[{
Cell[43050, 813, 2125, 54, 116, "Input",ExpressionUUID->"52693b14-cd22-4686-8adb-3f00ddc3a98d"],
Cell[45178, 869, 41939, 758, 321, "Output",ExpressionUUID->"b3985c1c-4061-4509-b676-6ab050b9379d"]
}, Open  ]],
Cell[87132, 1630, 518, 16, 48, "Text",ExpressionUUID->"0f043d34-5ad8-4e0d-87df-1dc1c3b2bfc4"],
Cell[CellGroupData[{
Cell[87675, 1650, 304, 6, 37, "Input",ExpressionUUID->"9398e19b-bb8c-4a78-967e-36ceadf76b6a"],
Cell[87982, 1658, 255, 5, 55, "Output",ExpressionUUID->"7e76e42e-5aec-4ca7-8a04-07c9a6f5c076"]
}, Open  ]],
Cell[88252, 1666, 1079, 35, 44, "Text",ExpressionUUID->"0c2aea8b-fd87-441a-a326-5c48894e3625"],
Cell[89334, 1703, 634, 16, 64, "Input",ExpressionUUID->"1f41bbf4-ac31-46e3-800d-3be52630f1f9"],
Cell[89971, 1721, 354, 10, 44, "Text",ExpressionUUID->"8309ad21-495f-499e-a7a5-68065ffb1b39"],
Cell[CellGroupData[{
Cell[90350, 1735, 286, 4, 64, "Input",ExpressionUUID->"65174fad-addb-4d92-913b-4dea82e5f110"],
Cell[90639, 1741, 318, 6, 42, "Output",ExpressionUUID->"88bf32d7-0e08-40a0-9975-e4e0504ed458"],
Cell[90960, 1749, 322, 7, 42, "Output",ExpressionUUID->"4aca46e9-9c69-4e0b-939b-3f25c246f106"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91331, 1762, 163, 3, 67, "Subsection",ExpressionUUID->"622f1d5f-67a5-4190-8be4-3a8e7870b2aa"],
Cell[91497, 1767, 889, 24, 37, "Input",ExpressionUUID->"e6935830-d6a9-4bb2-9ead-b5cbc1f55d21"],
Cell[CellGroupData[{
Cell[92411, 1795, 227, 4, 37, "Input",ExpressionUUID->"c14529be-a425-4eba-84bb-c5034d49a0b6"],
Cell[92641, 1801, 225, 6, 64, "Output",ExpressionUUID->"a0dc94fd-68ed-4c4c-b602-6a4974ef0416"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92903, 1812, 253, 5, 37, "Input",ExpressionUUID->"3fc578c4-41f3-4515-addd-1c0cc0bce7dd"],
Cell[93159, 1819, 207, 5, 84, "Output",ExpressionUUID->"435ea6ec-19a1-4b7b-be12-b7d0d3de6ed5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93403, 1829, 251, 5, 37, "Input",ExpressionUUID->"ffc7a930-1c88-4dfe-9287-077184e6fdae"],
Cell[93657, 1836, 149, 2, 42, "Output",ExpressionUUID->"c5d6f601-fd9d-43d6-b22f-ee1a3f2f4cd0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93855, 1844, 210, 4, 67, "Subsection",ExpressionUUID->"6825723d-50f7-4f04-856c-384c1e173b97"],
Cell[CellGroupData[{
Cell[94090, 1852, 440, 11, 37, "Input",ExpressionUUID->"e21ce143-5322-4a72-81fd-6d7b751d6c96"],
Cell[94533, 1865, 25446, 456, 540, "Output",ExpressionUUID->"f91df17e-f0c2-4a2b-ae62-07acb3c21e94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120016, 2326, 389, 10, 37, "Input",ExpressionUUID->"6b103d69-d148-4966-afef-89eddbd7a007"],
Cell[120408, 2338, 317, 8, 42, "Output",ExpressionUUID->"cf438a4c-f491-4ee8-9797-336335b0ce2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120762, 2351, 456, 12, 37, "Input",ExpressionUUID->"8ff741be-ed02-4d68-b703-f50f3ea66611"],
Cell[121221, 2365, 1270, 37, 68, "Output",ExpressionUUID->"6cda622c-6db6-413d-a65a-583f15d0d5dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122528, 2407, 1431, 40, 90, "Input",ExpressionUUID->"303b0b98-0069-4394-9cf2-ffaf7f001daa"],
Cell[123962, 2449, 1343, 38, 105, "Output",ExpressionUUID->"83246c3f-5a2b-4082-aed4-7d7dc07d8be0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125342, 2492, 414, 11, 37, "Input",ExpressionUUID->"85918481-5d8f-4fda-8b12-09ab3c1bc87b"],
Cell[125759, 2505, 359, 9, 42, "Output",ExpressionUUID->"241f8069-97bf-4374-af4a-d51e3b217526"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126155, 2519, 500, 13, 37, "Input",ExpressionUUID->"b50b5e19-152e-410e-84b1-9a4392e0e6c5"],
Cell[126658, 2534, 1637, 48, 134, "Output",ExpressionUUID->"67f08c9e-e323-4f20-acc4-8dc2a581968b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128332, 2587, 1793, 53, 116, "Input",ExpressionUUID->"bbd428c8-a0f6-4e05-bdc1-fd5ea72ce6c4"],
Cell[130128, 2642, 1565, 45, 105, "Output",ExpressionUUID->"53f8d378-7d26-4bae-ba05-26de7921063b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131730, 2692, 350, 6, 37, "Input",ExpressionUUID->"fcb0782f-d281-4d0e-8e15-fcc2a9ed97b9"],
Cell[132083, 2700, 1008, 31, 60, "Output",ExpressionUUID->"dc450a39-1889-4070-b901-9a9996420018"]
}, Open  ]],
Cell[133106, 2734, 369, 12, 49, "Text",ExpressionUUID->"22c96e72-cf94-4813-bd70-82b2e46e8649"],
Cell[CellGroupData[{
Cell[133500, 2750, 488, 13, 64, "Input",ExpressionUUID->"6a104f83-4d16-411d-a400-adff41580a4f"],
Cell[133991, 2765, 169, 3, 59, "Output",ExpressionUUID->"f2238a53-8512-4ffd-9a53-485df6b5944a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134197, 2773, 488, 13, 64, "Input",ExpressionUUID->"a6b7104d-4276-4e9c-9d0a-d8b504724e61"],
Cell[134688, 2788, 207, 5, 64, "Output",ExpressionUUID->"357db279-062e-4cdf-bc33-52c603e3c9df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134956, 2800, 187, 3, 84, "Section",ExpressionUUID->"734d16cc-f4f9-4cdd-b80a-08b8aeca3f69"],
Cell[CellGroupData[{
Cell[135168, 2807, 158, 3, 67, "Subsection",ExpressionUUID->"29e3f97d-7f61-4b4d-bf0c-ae225fdb5c94"],
Cell[CellGroupData[{
Cell[135351, 2814, 434, 10, 37, "Input",ExpressionUUID->"d585fe09-4c1c-4703-b933-fa314a06f0ef"],
Cell[135788, 2826, 37873, 659, 421, "Output",ExpressionUUID->"06895805-8d13-49b7-9fc4-6ab32a812684"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173698, 3490, 549, 16, 37, "Input",ExpressionUUID->"cee66a75-3ebe-4a40-afe3-117e7ab66c01"],
Cell[174250, 3508, 174, 3, 55, "Output",ExpressionUUID->"3a7f8dd0-f128-4390-bf69-209b23ddc456"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174473, 3517, 159, 3, 67, "Subsection",ExpressionUUID->"47b1a1f6-8756-442a-a6d4-94440cd3f4f0"],
Cell[CellGroupData[{
Cell[174657, 3524, 387, 9, 37, "Input",ExpressionUUID->"ab60474b-c286-4e05-a121-15d4b12629a4"],
Cell[175047, 3535, 25258, 452, 540, "Output",ExpressionUUID->"db4e0fcd-3992-42bb-82b3-f2638c59f00b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200342, 3992, 517, 14, 37, "Input",ExpressionUUID->"8ff700cf-6dbe-4302-a9e3-719b4c473da4"],
Cell[200862, 4008, 198, 4, 59, "Output",ExpressionUUID->"529a7ee9-e5c9-44fd-9bbe-70a97826713f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201109, 4018, 159, 3, 67, "Subsection",ExpressionUUID->"08bb7bf3-85ae-492e-85b1-3fe05de3999a"],
Cell[CellGroupData[{
Cell[201293, 4025, 518, 12, 37, "Input",ExpressionUUID->"5c5b6acf-2d9d-4dc0-8dd3-e3f92ab827d5"],
Cell[201814, 4039, 19821, 367, 180, "Output",ExpressionUUID->"badc1f8f-dc9c-4903-9671-23df6ee74cad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221684, 4412, 158, 3, 67, "Subsection",ExpressionUUID->"ef095f8b-3c6e-4bc5-a5e3-bcd7936538da"],
Cell[CellGroupData[{
Cell[221867, 4419, 385, 9, 37, "Input",ExpressionUUID->"d7d089d6-39e3-4894-ac72-ca2a4b715ccb"],
Cell[222255, 4430, 34410, 602, 471, "Output",ExpressionUUID->"7ae1679f-806f-43bd-b328-6c77c5358570"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[256714, 5038, 159, 3, 67, "Subsection",ExpressionUUID->"20bfca14-af82-4571-a656-4cd4db015086"],
Cell[CellGroupData[{
Cell[256898, 5045, 463, 11, 37, "Input",ExpressionUUID->"3b701195-7798-49bb-85d5-0e47c72ffd77"],
Cell[257364, 5058, 23712, 427, 516, "Output",ExpressionUUID->"79a86ee3-0d6a-4ef0-b063-2efc7c41c4a4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281125, 5491, 161, 3, 67, "Subsection",ExpressionUUID->"a1f406e4-43c9-46dd-a79f-4ba7da8a73b4"],
Cell[CellGroupData[{
Cell[281311, 5498, 411, 10, 37, "Input",ExpressionUUID->"7145c1f8-fc19-4c76-bbbc-ab16863588b5"],
Cell[281725, 5510, 25204, 452, 540, "Output",ExpressionUUID->"296383c5-cd5f-4183-9abc-181d6d094d49"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306978, 5968, 163, 3, 67, "Subsection",ExpressionUUID->"3ba1b293-ac5a-4e3e-91e7-25897841a937"],
Cell[CellGroupData[{
Cell[307166, 5975, 397, 10, 37, "Input",ExpressionUUID->"3e3a772a-91d1-4a88-bf0c-01e710597fcf"],
Cell[307566, 5987, 6531, 145, 469, "Output",ExpressionUUID->"a05f5b39-3b1d-4031-8a34-71e805f8fd99"]
}, Open  ]],
Cell[314112, 6135, 297, 7, 44, "Text",ExpressionUUID->"3531aa19-63e9-4998-b88e-c18ee5004063"],
Cell[CellGroupData[{
Cell[314434, 6146, 589, 16, 75, "Input",ExpressionUUID->"c1045d0e-0d06-42f9-be89-01207362d592"],
Cell[315026, 6164, 7014, 129, 298, "Output",ExpressionUUID->"87c59fdc-cdeb-48f6-a985-49a655d8fd75"]
}, Open  ]],
Cell[322055, 6296, 176, 3, 44, "Text",ExpressionUUID->"a9a8d46f-7443-48ff-9628-9599b12069f5"],
Cell[CellGroupData[{
Cell[322256, 6303, 895, 23, 75, "Input",ExpressionUUID->"d5197a66-c98f-4d71-aecf-53300454e753"],
Cell[323154, 6328, 19217, 378, 300, "Output",ExpressionUUID->"6409d05c-0cb8-43b0-ae83-0cbeb1a51ca9"]
}, Open  ]],
Cell[342386, 6709, 539, 17, 48, "Text",ExpressionUUID->"4e135096-0f45-4547-bdd7-4d994c521df4"],
Cell[CellGroupData[{
Cell[342950, 6730, 671, 18, 75, "Input",ExpressionUUID->"48181e31-c281-4391-90a5-320fb2eeb045"],
Cell[343624, 6750, 259, 3, 42, "Output",ExpressionUUID->"7988034a-3bf9-4852-8b12-7b657511b0cd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

